// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protos {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Protos {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protos_Box__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Box, global::protos.Box.Builder> internal__static_protos_Box__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Common__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Common, global::protos.Common.Builder> internal__static_protos_Common__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Common_RoomOption__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Common.Types.RoomOption, global::protos.Common.Types.RoomOption.Builder> internal__static_protos_Common_RoomOption__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Common_Room__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Common.Types.Room, global::protos.Common.Types.Room.Builder> internal__static_protos_Common_Room__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Auth__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Auth, global::protos.Auth.Builder> internal__static_protos_Auth__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Auth_AuthRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.AuthRequest, global::protos.Auth.Types.AuthRequest.Builder> internal__static_protos_Auth_AuthRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Auth_AuthResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.AuthResponse, global::protos.Auth.Types.AuthResponse.Builder> internal__static_protos_Auth_AuthResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Auth_RegisterRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.RegisterRequest, global::protos.Auth.Types.RegisterRequest.Builder> internal__static_protos_Auth_RegisterRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Auth_RegisterResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.RegisterResponse, global::protos.Auth.Types.RegisterResponse.Builder> internal__static_protos_Auth_RegisterResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Chat__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Chat, global::protos.Chat.Builder> internal__static_protos_Chat__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Chat_HallRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Chat.Types.HallRequest, global::protos.Chat.Types.HallRequest.Builder> internal__static_protos_Chat_HallRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Chat_Hall__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Chat.Types.Hall, global::protos.Chat.Types.Hall.Builder> internal__static_protos_Chat_Hall__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall, global::protos.Hall.Builder> internal__static_protos_Hall__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_CreateRoomRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.CreateRoomRequest, global::protos.Hall.Types.CreateRoomRequest.Builder> internal__static_protos_Hall_CreateRoomRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_EnterRoomRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.EnterRoomRequest, global::protos.Hall.Types.EnterRoomRequest.Builder> internal__static_protos_Hall_EnterRoomRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_YouEnter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.YouEnter, global::protos.Hall.Types.YouEnter.Builder> internal__static_protos_Hall_YouEnter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_YouLeave__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.YouLeave, global::protos.Hall.Types.YouLeave.Builder> internal__static_protos_Hall_YouLeave__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_RoomList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomList, global::protos.Hall.Types.RoomList.Builder> internal__static_protos_Hall_RoomList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_RoomCreated__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomCreated, global::protos.Hall.Types.RoomCreated.Builder> internal__static_protos_Hall_RoomCreated__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_RoomDead__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomDead, global::protos.Hall.Types.RoomDead.Builder> internal__static_protos_Hall_RoomDead__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Hall_RoomStateChanged__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomStateChanged, global::protos.Hall.Types.RoomStateChanged.Builder> internal__static_protos_Hall_RoomStateChanged__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Duel__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Duel, global::protos.Duel.Builder> internal__static_protos_Duel__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Duel_DataTransfer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Duel.Types.DataTransfer, global::protos.Duel.Types.DataTransfer.Builder> internal__static_protos_Duel_DataTransfer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Null__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Null, global::protos.Null.Builder> internal__static_protos_Null__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal, global::protos.Internal.Builder> internal__static_protos_Internal__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global, global::protos.Internal.Types.Global.Builder> internal__static_protos_Internal_Global__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_Locker__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Locker, global::protos.Internal.Types.Global.Types.Locker.Builder> internal__static_protos_Internal_Global_Locker__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_Locker_AcquireRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest, global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest.Builder> internal__static_protos_Internal_Global_Locker_AcquireRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_Locker_ReleaseRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest, global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest.Builder> internal__static_protos_Internal_Global_Locker_ReleaseRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_OnlineState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState, global::protos.Internal.Types.Global.Types.OnlineState.Builder> internal__static_protos_Internal_Global_OnlineState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_OnlineState_QueryRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest, global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest.Builder> internal__static_protos_Internal_Global_OnlineState_QueryRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_OnlineState_QueryResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse, global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse.Builder> internal__static_protos_Internal_Global_OnlineState_QueryResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_OnlineState_SetRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest, global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest.Builder> internal__static_protos_Internal_Global_OnlineState_SetRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Global_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Response, global::protos.Internal.Types.Global.Types.Response.Builder> internal__static_protos_Internal_Global_Response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_GameGate__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate, global::protos.Internal.Types.GameGate.Builder> internal__static_protos_Internal_GameGate__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_GameGate_EntryDataRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate.Types.EntryDataRequest, global::protos.Internal.Types.GameGate.Types.EntryDataRequest.Builder> internal__static_protos_Internal_GameGate_EntryDataRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_GameGate_PassThroughRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate.Types.PassThroughRequest, global::protos.Internal.Types.GameGate.Types.PassThroughRequest.Builder> internal__static_protos_Internal_GameGate_PassThroughRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_GameGate_KickRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate.Types.KickRequest, global::protos.Internal.Types.GameGate.Types.KickRequest.Builder> internal__static_protos_Internal_GameGate_KickRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Hall__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall, global::protos.Internal.Types.Hall.Builder> internal__static_protos_Internal_Hall__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Hall_EnterRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.EnterRequest, global::protos.Internal.Types.Hall.Types.EnterRequest.Builder> internal__static_protos_Internal_Hall_EnterRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Hall_LeaveResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.LeaveResponse, global::protos.Internal.Types.Hall.Types.LeaveResponse.Builder> internal__static_protos_Internal_Hall_LeaveResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Hall_CreateRoomRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.CreateRoomRequest, global::protos.Internal.Types.Hall.Types.CreateRoomRequest.Builder> internal__static_protos_Internal_Hall_CreateRoomRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Hall_EnterRoomRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.EnterRoomRequest, global::protos.Internal.Types.Hall.Types.EnterRoomRequest.Builder> internal__static_protos_Internal_Hall_EnterRoomRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Duel__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Duel, global::protos.Internal.Types.Duel.Builder> internal__static_protos_Internal_Duel__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Duel_DataTransfer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Duel.Types.DataTransfer, global::protos.Internal.Types.Duel.Types.DataTransfer.Builder> internal__static_protos_Internal_Duel_DataTransfer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Chat__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Chat, global::protos.Internal.Types.Chat.Builder> internal__static_protos_Internal_Chat__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protos_Internal_Chat_HallRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Chat.Types.HallRequest, global::protos.Internal.Types.Chat.Types.HallRequest.Builder> internal__static_protos_Internal_Chat_HallRequest__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Protos() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxwcm90b3MucHJvdG8SBnByb3RvcyItCgNCb3gSEgoEVHlwZRgBIAEoCVIE", 
            "dHlwZRISCgREYXRhGAIgASgMUgRkYXRhIs0ECgZDb21tb24a+gEKClJvb21P", 
            "cHRpb24SEgoETmFtZRgBIAEoCVIEbmFtZRIaCghQYXNzd29yZBgCIAEoCVII", 
            "cGFzc3dvcmQSDgoCTHAYAyABKA1SAmxwEhwKCUhhbmRDb3VudBgEIAEoDVIJ", 
            "aGFuZENvdW50EhwKCURyYXdDb3VudBgFIAEoDVIJZHJhd0NvdW50EisKBE1v", 
            "ZGUYBiABKA4yFy5wcm90b3MuQ29tbW9uLlJvb21Nb2RlUgRtb2RlEisKBFJ1", 
            "bGUYByABKA4yFy5wcm90b3MuQ29tbW9uLlJvb21SdWxlUgRydWxlEhYKBkxG", 
            "TGlzdBgIIAEoDVIGbEZMaXN0Gq8BCgRSb29tEg4KAklkGAEgASgEUgJpZBIx", 
            "CgZPcHRpb24YAiABKAsyGS5wcm90b3MuQ29tbW9uLlJvb21PcHRpb25SBm9w", 
            "dGlvbhIYCgdQbGF5ZXJzGAMgAygJUgdwbGF5ZXJzEhoKCFZpc2l0b3JzGAQg", 
            "AygJUgh2aXNpdG9ycxIuCgVTdGF0ZRgFIAEoDjIYLnByb3Rvcy5Db21tb24u", 
            "Um9vbVN0YXRlUgVzdGF0ZSIqCghSb29tTW9kZRIKCgZTaW5nbGUQABIJCgVN", 
            "YXRjaBABEgcKA1RhZxACIigKCFJvb21SdWxlEgcKA09jZxAAEgcKA1RjZxAB", 
            "EgoKBk9jZ1RjZxACIj4KCVJvb21TdGF0ZRIICgRJbml0EAASCQoFUmVhZHkQ", 
            "ARISCg5SZWFkeUNvbXBsZXRlZBACEggKBER1ZWwQAyKcAgoEQXV0aBpDCgtB", 
            "dXRoUmVxdWVzdBIYCgdBY2NvdW50GAEgASgJUgdhY2NvdW50EhoKCFBhc3N3", 
            "b3JkGAIgASgMUghwYXNzd29yZBpACgxBdXRoUmVzcG9uc2USGAoHU3VjY2Vz", 
            "cxgBIAEoCFIHc3VjY2VzcxIWCgZSZWFzb24YAiABKAlSBnJlYXNvbhpHCg9S", 
            "ZWdpc3RlclJlcXVlc3QSGAoHQWNjb3VudBgBIAEoCVIHYWNjb3VudBIaCghQ", 
            "YXNzd29yZBgCIAEoDFIIcGFzc3dvcmQaRAoQUmVnaXN0ZXJSZXNwb25zZRIY", 
            "CgdTdWNjZXNzGAEgASgIUgdzdWNjZXNzEhYKBlJlYXNvbhgCIAEoCVIGcmVh", 
            "c29uImsKBENoYXQaJwoLSGFsbFJlcXVlc3QSGAoHQ29udGVudBgBIAEoCVIH", 
            "Y29udGVudBo6CgRIYWxsEhgKB0FjY291bnQYASABKAlSB2FjY291bnQSGAoH", 
            "Q29udGVudBgCIAEoCVIHY29udGVudCLsAgoESGFsbBpGChFDcmVhdGVSb29t", 
            "UmVxdWVzdBIxCgZPcHRpb24YASABKAsyGS5wcm90b3MuQ29tbW9uLlJvb21P", 
            "cHRpb25SBm9wdGlvbho+ChBFbnRlclJvb21SZXF1ZXN0Eg4KAklkGAEgASgE", 
            "UgJpZBIaCghQYXNzd29yZBgCIAEoCVIIcGFzc3dvcmQaCgoIWW91RW50ZXIa", 
            "CgoIWW91TGVhdmUaMwoIUm9vbUxpc3QSJwoETGlzdBgBIAMoCzITLnByb3Rv", 
            "cy5Db21tb24uUm9vbVIEbGlzdBo2CgtSb29tQ3JlYXRlZBInCgRSb29tGAEg", 
            "ASgLMhMucHJvdG9zLkNvbW1vbi5Sb29tUgRyb29tGhoKCFJvb21EZWFkEg4K", 
            "AklkGAEgASgEUgJpZBo7ChBSb29tU3RhdGVDaGFuZ2VkEicKBFJvb20YASAB", 
            "KAsyEy5wcm90b3MuQ29tbW9uLlJvb21SBHJvb20iKgoERHVlbBoiCgxEYXRh", 
            "VHJhbnNmZXISEgoERGF0YRgBIAEoDFIEZGF0YSIGCgROdWxsIsEGCghJbnRl", 
            "cm5hbBrPAgoGR2xvYmFsGlAKBkxvY2tlchoiCg5BY3F1aXJlUmVxdWVzdBIQ", 
            "CgNLZXkYASABKAlSA2tleRoiCg5SZWxlYXNlUmVxdWVzdBIQCgNLZXkYASAB", 
            "KAlSA2tleRrMAQoLT25saW5lU3RhdGUaKAoMUXVlcnlSZXF1ZXN0EhgKB0Fj", 
            "Y291bnQYASABKAlSB2FjY291bnQaVQoNUXVlcnlSZXNwb25zZRIUCgVTdGF0", 
            "ZRgBIAEoCFIFc3RhdGUSFAoFV2hlcmUYAiABKAlSBXdoZXJlEhgKB1Nlc3Np", 
            "b24YAyABKARSB3Nlc3Npb24aPAoKU2V0UmVxdWVzdBIYCgdBY2NvdW50GAEg", 
            "ASgJUgdhY2NvdW50EhQKBVN0YXRlGAIgASgIUgVzdGF0ZRokCghSZXNwb25z", 
            "ZRIYCgdTdWNjZXNzGAEgASgIUgdzdWNjZXNzGoUBCghHYW1lR2F0ZRomChBF", 
            "bnRyeURhdGFSZXF1ZXN0EhIKBERhdGEYASABKAxSBGRhdGEaKAoSUGFzc1Ro", 
            "cm91Z2hSZXF1ZXN0EhIKBERhdGEYASABKAxSBGRhdGEaJwoLS2lja1JlcXVl", 
            "c3QSGAoHU2Vzc2lvbhgBIAEoBFIHc2Vzc2lvbhrjAQoESGFsbBooCgxFbnRl", 
            "clJlcXVlc3QSGAoHQWNjb3VudBgBIAEoCVIHYWNjb3VudBopCg1MZWF2ZVJl", 
            "c3BvbnNlEhgKB1N1Y2Nlc3MYASABKAhSB3N1Y2Nlc3MaRgoRQ3JlYXRlUm9v", 
            "bVJlcXVlc3QSMQoGT3B0aW9uGAEgASgLMhkucHJvdG9zLkNvbW1vbi5Sb29t", 
            "T3B0aW9uUgZvcHRpb24aPgoQRW50ZXJSb29tUmVxdWVzdBIOCgJJZBgBIAEo", 
            "BFICaWQSGgoIUGFzc3dvcmQYAiABKAlSCHBhc3N3b3JkGioKBER1ZWwaIgoM", 
            "RGF0YVRyYW5zZmVyEhIKBERhdGEYASABKAxSBGRhdGEaSQoEQ2hhdBpBCgtI", 
            "YWxsUmVxdWVzdBIYCgdBY2NvdW50GAEgASgJUgdhY2NvdW50EhgKB0NvbnRl", 
            "bnQYAiABKAlSB2NvbnRlbnQyiQIKD0dhbWVHYXRlU2VydmljZRJFCglFbnRy", 
            "eURhdGESKi5wcm90b3MuSW50ZXJuYWwuR2FtZUdhdGUuRW50cnlEYXRhUmVx", 
            "dWVzdBoMLnByb3Rvcy5OdWxsEkkKC1Bhc3NUaHJvdWdoEiwucHJvdG9zLklu", 
            "dGVybmFsLkdhbWVHYXRlLlBhc3NUaHJvdWdoUmVxdWVzdBoMLnByb3Rvcy5O", 
            "dWxsEjsKBEtpY2sSJS5wcm90b3MuSW50ZXJuYWwuR2FtZUdhdGUuS2lja1Jl", 
            "cXVlc3QaDC5wcm90b3MuTnVsbBInCglNeU9mZmxpbmUSDC5wcm90b3MuTnVs", 
            "bBoMLnByb3Rvcy5OdWxsMpMBCgtBdXRoU2VydmljZRI7CgRBdXRoEhgucHJv", 
            "dG9zLkF1dGguQXV0aFJlcXVlc3QaGS5wcm90b3MuQXV0aC5BdXRoUmVzcG9u", 
            "c2USRwoIUmVnaXN0ZXISHC5wcm90b3MuQXV0aC5SZWdpc3RlclJlcXVlc3Qa", 
            "HS5wcm90b3MuQXV0aC5SZWdpc3RlclJlc3BvbnNlMs0BChNHbG9iYWxMb2Nr", 
            "ZXJTZXJ2aWNlEloKB0FjcXVpcmUSLS5wcm90b3MuSW50ZXJuYWwuR2xvYmFs", 
            "LkxvY2tlci5BY3F1aXJlUmVxdWVzdBogLnByb3Rvcy5JbnRlcm5hbC5HbG9i", 
            "YWwuUmVzcG9uc2USWgoHUmVsZWFzZRItLnByb3Rvcy5JbnRlcm5hbC5HbG9i", 
            "YWwuTG9ja2VyLlJlbGVhc2VSZXF1ZXN0GiAucHJvdG9zLkludGVybmFsLkds", 
            "b2JhbC5SZXNwb25zZTLhAQoYR2xvYmFsT25saW5lU3RhdGVTZXJ2aWNlEmwK", 
            "BVF1ZXJ5EjAucHJvdG9zLkludGVybmFsLkdsb2JhbC5PbmxpbmVTdGF0ZS5R", 
            "dWVyeVJlcXVlc3QaMS5wcm90b3MuSW50ZXJuYWwuR2xvYmFsLk9ubGluZVN0", 
            "YXRlLlF1ZXJ5UmVzcG9uc2USVwoDU2V0Ei4ucHJvdG9zLkludGVybmFsLkds", 
            "b2JhbC5PbmxpbmVTdGF0ZS5TZXRSZXF1ZXN0GiAucHJvdG9zLkludGVybmFs", 
            "Lkdsb2JhbC5SZXNwb25zZTLOAgoLSGFsbFNlcnZpY2USOQoFRW50ZXISIi5w", 
            "cm90b3MuSW50ZXJuYWwuSGFsbC5FbnRlclJlcXVlc3QaDC5wcm90b3MuTnVs", 
            "bBI6CgVMZWF2ZRIMLnByb3Rvcy5OdWxsGiMucHJvdG9zLkludGVybmFsLkhh", 
            "bGwuTGVhdmVSZXNwb25zZRJDCgpDcmVhdGVSb29tEicucHJvdG9zLkludGVy", 
            "bmFsLkhhbGwuQ3JlYXRlUm9vbVJlcXVlc3QaDC5wcm90b3MuTnVsbBJBCglF", 
            "bnRlclJvb20SJi5wcm90b3MuSW50ZXJuYWwuSGFsbC5FbnRlclJvb21SZXF1", 
            "ZXN0GgwucHJvdG9zLk51bGwSQAoMRGF0YVRyYW5zZmVyEiIucHJvdG9zLklu", 
            "dGVybmFsLkR1ZWwuRGF0YVRyYW5zZmVyGgwucHJvdG9zLk51bGwynAEKC0No", 
            "YXRTZXJ2aWNlEicKCUVudGVySGFsbBIMLnByb3Rvcy5OdWxsGgwucHJvdG9z", 
            "Lk51bGwSJwoJTGVhdmVIYWxsEgwucHJvdG9zLk51bGwaDC5wcm90b3MuTnVs", 
            "bBI7CghIYWxsQ2hhdBIhLnByb3Rvcy5JbnRlcm5hbC5DaGF0LkhhbGxSZXF1", 
          "ZXN0GgwucHJvdG9zLk51bGxiBnByb3RvMw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protos_Box__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protos_Box__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Box, global::protos.Box.Builder>(internal__static_protos_Box__Descriptor,
                new string[] { "Type", "Data", });
        internal__static_protos_Common__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protos_Common__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Common, global::protos.Common.Builder>(internal__static_protos_Common__Descriptor,
                new string[] { });
        internal__static_protos_Common_RoomOption__Descriptor = internal__static_protos_Common__Descriptor.NestedTypes[0];
        internal__static_protos_Common_RoomOption__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Common.Types.RoomOption, global::protos.Common.Types.RoomOption.Builder>(internal__static_protos_Common_RoomOption__Descriptor,
                new string[] { "Name", "Password", "Lp", "HandCount", "DrawCount", "Mode", "Rule", "LFList", });
        internal__static_protos_Common_Room__Descriptor = internal__static_protos_Common__Descriptor.NestedTypes[1];
        internal__static_protos_Common_Room__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Common.Types.Room, global::protos.Common.Types.Room.Builder>(internal__static_protos_Common_Room__Descriptor,
                new string[] { "Id", "Option", "Players", "Visitors", "State", });
        internal__static_protos_Auth__Descriptor = Descriptor.MessageTypes[2];
        internal__static_protos_Auth__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Auth, global::protos.Auth.Builder>(internal__static_protos_Auth__Descriptor,
                new string[] { });
        internal__static_protos_Auth_AuthRequest__Descriptor = internal__static_protos_Auth__Descriptor.NestedTypes[0];
        internal__static_protos_Auth_AuthRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.AuthRequest, global::protos.Auth.Types.AuthRequest.Builder>(internal__static_protos_Auth_AuthRequest__Descriptor,
                new string[] { "Account", "Password", });
        internal__static_protos_Auth_AuthResponse__Descriptor = internal__static_protos_Auth__Descriptor.NestedTypes[1];
        internal__static_protos_Auth_AuthResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.AuthResponse, global::protos.Auth.Types.AuthResponse.Builder>(internal__static_protos_Auth_AuthResponse__Descriptor,
                new string[] { "Success", "Reason", });
        internal__static_protos_Auth_RegisterRequest__Descriptor = internal__static_protos_Auth__Descriptor.NestedTypes[2];
        internal__static_protos_Auth_RegisterRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.RegisterRequest, global::protos.Auth.Types.RegisterRequest.Builder>(internal__static_protos_Auth_RegisterRequest__Descriptor,
                new string[] { "Account", "Password", });
        internal__static_protos_Auth_RegisterResponse__Descriptor = internal__static_protos_Auth__Descriptor.NestedTypes[3];
        internal__static_protos_Auth_RegisterResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Auth.Types.RegisterResponse, global::protos.Auth.Types.RegisterResponse.Builder>(internal__static_protos_Auth_RegisterResponse__Descriptor,
                new string[] { "Success", "Reason", });
        internal__static_protos_Chat__Descriptor = Descriptor.MessageTypes[3];
        internal__static_protos_Chat__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Chat, global::protos.Chat.Builder>(internal__static_protos_Chat__Descriptor,
                new string[] { });
        internal__static_protos_Chat_HallRequest__Descriptor = internal__static_protos_Chat__Descriptor.NestedTypes[0];
        internal__static_protos_Chat_HallRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Chat.Types.HallRequest, global::protos.Chat.Types.HallRequest.Builder>(internal__static_protos_Chat_HallRequest__Descriptor,
                new string[] { "Content", });
        internal__static_protos_Chat_Hall__Descriptor = internal__static_protos_Chat__Descriptor.NestedTypes[1];
        internal__static_protos_Chat_Hall__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Chat.Types.Hall, global::protos.Chat.Types.Hall.Builder>(internal__static_protos_Chat_Hall__Descriptor,
                new string[] { "Account", "Content", });
        internal__static_protos_Hall__Descriptor = Descriptor.MessageTypes[4];
        internal__static_protos_Hall__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall, global::protos.Hall.Builder>(internal__static_protos_Hall__Descriptor,
                new string[] { });
        internal__static_protos_Hall_CreateRoomRequest__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[0];
        internal__static_protos_Hall_CreateRoomRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.CreateRoomRequest, global::protos.Hall.Types.CreateRoomRequest.Builder>(internal__static_protos_Hall_CreateRoomRequest__Descriptor,
                new string[] { "Option", });
        internal__static_protos_Hall_EnterRoomRequest__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[1];
        internal__static_protos_Hall_EnterRoomRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.EnterRoomRequest, global::protos.Hall.Types.EnterRoomRequest.Builder>(internal__static_protos_Hall_EnterRoomRequest__Descriptor,
                new string[] { "Id", "Password", });
        internal__static_protos_Hall_YouEnter__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[2];
        internal__static_protos_Hall_YouEnter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.YouEnter, global::protos.Hall.Types.YouEnter.Builder>(internal__static_protos_Hall_YouEnter__Descriptor,
                new string[] { });
        internal__static_protos_Hall_YouLeave__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[3];
        internal__static_protos_Hall_YouLeave__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.YouLeave, global::protos.Hall.Types.YouLeave.Builder>(internal__static_protos_Hall_YouLeave__Descriptor,
                new string[] { });
        internal__static_protos_Hall_RoomList__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[4];
        internal__static_protos_Hall_RoomList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomList, global::protos.Hall.Types.RoomList.Builder>(internal__static_protos_Hall_RoomList__Descriptor,
                new string[] { "List", });
        internal__static_protos_Hall_RoomCreated__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[5];
        internal__static_protos_Hall_RoomCreated__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomCreated, global::protos.Hall.Types.RoomCreated.Builder>(internal__static_protos_Hall_RoomCreated__Descriptor,
                new string[] { "Room", });
        internal__static_protos_Hall_RoomDead__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[6];
        internal__static_protos_Hall_RoomDead__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomDead, global::protos.Hall.Types.RoomDead.Builder>(internal__static_protos_Hall_RoomDead__Descriptor,
                new string[] { "Id", });
        internal__static_protos_Hall_RoomStateChanged__Descriptor = internal__static_protos_Hall__Descriptor.NestedTypes[7];
        internal__static_protos_Hall_RoomStateChanged__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Hall.Types.RoomStateChanged, global::protos.Hall.Types.RoomStateChanged.Builder>(internal__static_protos_Hall_RoomStateChanged__Descriptor,
                new string[] { "Room", });
        internal__static_protos_Duel__Descriptor = Descriptor.MessageTypes[5];
        internal__static_protos_Duel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Duel, global::protos.Duel.Builder>(internal__static_protos_Duel__Descriptor,
                new string[] { });
        internal__static_protos_Duel_DataTransfer__Descriptor = internal__static_protos_Duel__Descriptor.NestedTypes[0];
        internal__static_protos_Duel_DataTransfer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Duel.Types.DataTransfer, global::protos.Duel.Types.DataTransfer.Builder>(internal__static_protos_Duel_DataTransfer__Descriptor,
                new string[] { "Data", });
        internal__static_protos_Null__Descriptor = Descriptor.MessageTypes[6];
        internal__static_protos_Null__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Null, global::protos.Null.Builder>(internal__static_protos_Null__Descriptor,
                new string[] { });
        internal__static_protos_Internal__Descriptor = Descriptor.MessageTypes[7];
        internal__static_protos_Internal__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal, global::protos.Internal.Builder>(internal__static_protos_Internal__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Global__Descriptor = internal__static_protos_Internal__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Global__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global, global::protos.Internal.Types.Global.Builder>(internal__static_protos_Internal_Global__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Global_Locker__Descriptor = internal__static_protos_Internal_Global__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Global_Locker__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Locker, global::protos.Internal.Types.Global.Types.Locker.Builder>(internal__static_protos_Internal_Global_Locker__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Global_Locker_AcquireRequest__Descriptor = internal__static_protos_Internal_Global_Locker__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Global_Locker_AcquireRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest, global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest.Builder>(internal__static_protos_Internal_Global_Locker_AcquireRequest__Descriptor,
                new string[] { "Key", });
        internal__static_protos_Internal_Global_Locker_ReleaseRequest__Descriptor = internal__static_protos_Internal_Global_Locker__Descriptor.NestedTypes[1];
        internal__static_protos_Internal_Global_Locker_ReleaseRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest, global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest.Builder>(internal__static_protos_Internal_Global_Locker_ReleaseRequest__Descriptor,
                new string[] { "Key", });
        internal__static_protos_Internal_Global_OnlineState__Descriptor = internal__static_protos_Internal_Global__Descriptor.NestedTypes[1];
        internal__static_protos_Internal_Global_OnlineState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState, global::protos.Internal.Types.Global.Types.OnlineState.Builder>(internal__static_protos_Internal_Global_OnlineState__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Global_OnlineState_QueryRequest__Descriptor = internal__static_protos_Internal_Global_OnlineState__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Global_OnlineState_QueryRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest, global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest.Builder>(internal__static_protos_Internal_Global_OnlineState_QueryRequest__Descriptor,
                new string[] { "Account", });
        internal__static_protos_Internal_Global_OnlineState_QueryResponse__Descriptor = internal__static_protos_Internal_Global_OnlineState__Descriptor.NestedTypes[1];
        internal__static_protos_Internal_Global_OnlineState_QueryResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse, global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse.Builder>(internal__static_protos_Internal_Global_OnlineState_QueryResponse__Descriptor,
                new string[] { "State", "Where", "Session", });
        internal__static_protos_Internal_Global_OnlineState_SetRequest__Descriptor = internal__static_protos_Internal_Global_OnlineState__Descriptor.NestedTypes[2];
        internal__static_protos_Internal_Global_OnlineState_SetRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest, global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest.Builder>(internal__static_protos_Internal_Global_OnlineState_SetRequest__Descriptor,
                new string[] { "Account", "State", });
        internal__static_protos_Internal_Global_Response__Descriptor = internal__static_protos_Internal_Global__Descriptor.NestedTypes[2];
        internal__static_protos_Internal_Global_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Global.Types.Response, global::protos.Internal.Types.Global.Types.Response.Builder>(internal__static_protos_Internal_Global_Response__Descriptor,
                new string[] { "Success", });
        internal__static_protos_Internal_GameGate__Descriptor = internal__static_protos_Internal__Descriptor.NestedTypes[1];
        internal__static_protos_Internal_GameGate__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate, global::protos.Internal.Types.GameGate.Builder>(internal__static_protos_Internal_GameGate__Descriptor,
                new string[] { });
        internal__static_protos_Internal_GameGate_EntryDataRequest__Descriptor = internal__static_protos_Internal_GameGate__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_GameGate_EntryDataRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate.Types.EntryDataRequest, global::protos.Internal.Types.GameGate.Types.EntryDataRequest.Builder>(internal__static_protos_Internal_GameGate_EntryDataRequest__Descriptor,
                new string[] { "Data", });
        internal__static_protos_Internal_GameGate_PassThroughRequest__Descriptor = internal__static_protos_Internal_GameGate__Descriptor.NestedTypes[1];
        internal__static_protos_Internal_GameGate_PassThroughRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate.Types.PassThroughRequest, global::protos.Internal.Types.GameGate.Types.PassThroughRequest.Builder>(internal__static_protos_Internal_GameGate_PassThroughRequest__Descriptor,
                new string[] { "Data", });
        internal__static_protos_Internal_GameGate_KickRequest__Descriptor = internal__static_protos_Internal_GameGate__Descriptor.NestedTypes[2];
        internal__static_protos_Internal_GameGate_KickRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.GameGate.Types.KickRequest, global::protos.Internal.Types.GameGate.Types.KickRequest.Builder>(internal__static_protos_Internal_GameGate_KickRequest__Descriptor,
                new string[] { "Session", });
        internal__static_protos_Internal_Hall__Descriptor = internal__static_protos_Internal__Descriptor.NestedTypes[2];
        internal__static_protos_Internal_Hall__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall, global::protos.Internal.Types.Hall.Builder>(internal__static_protos_Internal_Hall__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Hall_EnterRequest__Descriptor = internal__static_protos_Internal_Hall__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Hall_EnterRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.EnterRequest, global::protos.Internal.Types.Hall.Types.EnterRequest.Builder>(internal__static_protos_Internal_Hall_EnterRequest__Descriptor,
                new string[] { "Account", });
        internal__static_protos_Internal_Hall_LeaveResponse__Descriptor = internal__static_protos_Internal_Hall__Descriptor.NestedTypes[1];
        internal__static_protos_Internal_Hall_LeaveResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.LeaveResponse, global::protos.Internal.Types.Hall.Types.LeaveResponse.Builder>(internal__static_protos_Internal_Hall_LeaveResponse__Descriptor,
                new string[] { "Success", });
        internal__static_protos_Internal_Hall_CreateRoomRequest__Descriptor = internal__static_protos_Internal_Hall__Descriptor.NestedTypes[2];
        internal__static_protos_Internal_Hall_CreateRoomRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.CreateRoomRequest, global::protos.Internal.Types.Hall.Types.CreateRoomRequest.Builder>(internal__static_protos_Internal_Hall_CreateRoomRequest__Descriptor,
                new string[] { "Option", });
        internal__static_protos_Internal_Hall_EnterRoomRequest__Descriptor = internal__static_protos_Internal_Hall__Descriptor.NestedTypes[3];
        internal__static_protos_Internal_Hall_EnterRoomRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Hall.Types.EnterRoomRequest, global::protos.Internal.Types.Hall.Types.EnterRoomRequest.Builder>(internal__static_protos_Internal_Hall_EnterRoomRequest__Descriptor,
                new string[] { "Id", "Password", });
        internal__static_protos_Internal_Duel__Descriptor = internal__static_protos_Internal__Descriptor.NestedTypes[3];
        internal__static_protos_Internal_Duel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Duel, global::protos.Internal.Types.Duel.Builder>(internal__static_protos_Internal_Duel__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Duel_DataTransfer__Descriptor = internal__static_protos_Internal_Duel__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Duel_DataTransfer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Duel.Types.DataTransfer, global::protos.Internal.Types.Duel.Types.DataTransfer.Builder>(internal__static_protos_Internal_Duel_DataTransfer__Descriptor,
                new string[] { "Data", });
        internal__static_protos_Internal_Chat__Descriptor = internal__static_protos_Internal__Descriptor.NestedTypes[4];
        internal__static_protos_Internal_Chat__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Chat, global::protos.Internal.Types.Chat.Builder>(internal__static_protos_Internal_Chat__Descriptor,
                new string[] { });
        internal__static_protos_Internal_Chat_HallRequest__Descriptor = internal__static_protos_Internal_Chat__Descriptor.NestedTypes[0];
        internal__static_protos_Internal_Chat_HallRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protos.Internal.Types.Chat.Types.HallRequest, global::protos.Internal.Types.Chat.Types.HallRequest.Builder>(internal__static_protos_Internal_Chat_HallRequest__Descriptor,
                new string[] { "Account", "Content", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Box : pb::GeneratedMessage<Box, Box.Builder> {
    private Box() { }
    private static readonly Box defaultInstance = new Box().MakeReadOnly();
    private static readonly string[] _boxFieldNames = new string[] { "Data", "Type" };
    private static readonly uint[] _boxFieldTags = new uint[] { 18, 10 };
    public static Box DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Box DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Box ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Box__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Box, Box.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Box__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _boxFieldNames;
      if (hasType) {
        output.WriteString(1, field_names[1], Type);
      }
      if (hasData) {
        output.WriteBytes(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Type);
      }
      if (hasData) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Data);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Box ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Box ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Box ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Box ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Box ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Box ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Box ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Box ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Box ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Box ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Box MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Box prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Box, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Box cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Box result;
      
      private Box PrepareBuilder() {
        if (resultIsReadOnly) {
          Box original = result;
          result = new Box();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Box MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Box.Descriptor; }
      }
      
      public override Box DefaultInstanceForType {
        get { return global::protos.Box.DefaultInstance; }
      }
      
      public override Box BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Box) {
          return MergeFrom((Box) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Box other) {
        if (other == global::protos.Box.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_boxFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _boxFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasType = input.ReadString(ref result.type_);
              break;
            }
            case 18: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Box() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Common : pb::GeneratedMessage<Common, Common.Builder> {
    private Common() { }
    private static readonly Common defaultInstance = new Common().MakeReadOnly();
    private static readonly string[] _commonFieldNames = new string[] {  };
    private static readonly uint[] _commonFieldTags = new uint[] {  };
    public static Common DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Common DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Common ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Common__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Common, Common.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Common__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum RoomMode {
        Single = 0,
        Match = 1,
        Tag = 2,
      }
      
      public enum RoomRule {
        Ocg = 0,
        Tcg = 1,
        OcgTcg = 2,
      }
      
      public enum RoomState {
        Init = 0,
        Ready = 1,
        ReadyCompleted = 2,
        Duel = 3,
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RoomOption : pb::GeneratedMessage<RoomOption, RoomOption.Builder> {
        private RoomOption() { }
        private static readonly RoomOption defaultInstance = new RoomOption().MakeReadOnly();
        private static readonly string[] _roomOptionFieldNames = new string[] { "DrawCount", "HandCount", "LFList", "Lp", "Mode", "Name", "Password", "Rule" };
        private static readonly uint[] _roomOptionFieldTags = new uint[] { 40, 32, 64, 24, 48, 10, 18, 56 };
        public static RoomOption DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RoomOption DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RoomOption ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Common_RoomOption__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RoomOption, RoomOption.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Common_RoomOption__FieldAccessorTable; }
        }
        
        public const int NameFieldNumber = 1;
        private bool hasName;
        private string name_ = "";
        public bool HasName {
          get { return hasName; }
        }
        public string Name {
          get { return name_; }
        }
        
        public const int PasswordFieldNumber = 2;
        private bool hasPassword;
        private string password_ = "";
        public bool HasPassword {
          get { return hasPassword; }
        }
        public string Password {
          get { return password_; }
        }
        
        public const int LpFieldNumber = 3;
        private bool hasLp;
        private uint lp_;
        public bool HasLp {
          get { return hasLp; }
        }
        [global::System.CLSCompliant(false)]
        public uint Lp {
          get { return lp_; }
        }
        
        public const int HandCountFieldNumber = 4;
        private bool hasHandCount;
        private uint handCount_;
        public bool HasHandCount {
          get { return hasHandCount; }
        }
        [global::System.CLSCompliant(false)]
        public uint HandCount {
          get { return handCount_; }
        }
        
        public const int DrawCountFieldNumber = 5;
        private bool hasDrawCount;
        private uint drawCount_;
        public bool HasDrawCount {
          get { return hasDrawCount; }
        }
        [global::System.CLSCompliant(false)]
        public uint DrawCount {
          get { return drawCount_; }
        }
        
        public const int ModeFieldNumber = 6;
        private bool hasMode;
        private global::protos.Common.Types.RoomMode mode_ = global::protos.Common.Types.RoomMode.Single;
        public bool HasMode {
          get { return hasMode; }
        }
        public global::protos.Common.Types.RoomMode Mode {
          get { return mode_; }
        }
        
        public const int RuleFieldNumber = 7;
        private bool hasRule;
        private global::protos.Common.Types.RoomRule rule_ = global::protos.Common.Types.RoomRule.Ocg;
        public bool HasRule {
          get { return hasRule; }
        }
        public global::protos.Common.Types.RoomRule Rule {
          get { return rule_; }
        }
        
        public const int LFListFieldNumber = 8;
        private bool hasLFList;
        private uint lFList_;
        public bool HasLFList {
          get { return hasLFList; }
        }
        [global::System.CLSCompliant(false)]
        public uint LFList {
          get { return lFList_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _roomOptionFieldNames;
          if (hasName) {
            output.WriteString(1, field_names[5], Name);
          }
          if (hasPassword) {
            output.WriteString(2, field_names[6], Password);
          }
          if (hasLp) {
            output.WriteUInt32(3, field_names[3], Lp);
          }
          if (hasHandCount) {
            output.WriteUInt32(4, field_names[1], HandCount);
          }
          if (hasDrawCount) {
            output.WriteUInt32(5, field_names[0], DrawCount);
          }
          if (hasMode) {
            output.WriteEnum(6, field_names[4], (int) Mode, Mode);
          }
          if (hasRule) {
            output.WriteEnum(7, field_names[7], (int) Rule, Rule);
          }
          if (hasLFList) {
            output.WriteUInt32(8, field_names[2], LFList);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasPassword) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Password);
          }
          if (hasLp) {
            size += pb::CodedOutputStream.ComputeUInt32Size(3, Lp);
          }
          if (hasHandCount) {
            size += pb::CodedOutputStream.ComputeUInt32Size(4, HandCount);
          }
          if (hasDrawCount) {
            size += pb::CodedOutputStream.ComputeUInt32Size(5, DrawCount);
          }
          if (hasMode) {
            size += pb::CodedOutputStream.ComputeEnumSize(6, (int) Mode);
          }
          if (hasRule) {
            size += pb::CodedOutputStream.ComputeEnumSize(7, (int) Rule);
          }
          if (hasLFList) {
            size += pb::CodedOutputStream.ComputeUInt32Size(8, LFList);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RoomOption ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomOption ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomOption ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomOption ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomOption ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomOption ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RoomOption ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RoomOption ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RoomOption ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomOption ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RoomOption MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RoomOption prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RoomOption, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RoomOption cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RoomOption result;
          
          private RoomOption PrepareBuilder() {
            if (resultIsReadOnly) {
              RoomOption original = result;
              result = new RoomOption();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RoomOption MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Common.Types.RoomOption.Descriptor; }
          }
          
          public override RoomOption DefaultInstanceForType {
            get { return global::protos.Common.Types.RoomOption.DefaultInstance; }
          }
          
          public override RoomOption BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RoomOption) {
              return MergeFrom((RoomOption) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RoomOption other) {
            if (other == global::protos.Common.Types.RoomOption.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasName) {
              Name = other.Name;
            }
            if (other.HasPassword) {
              Password = other.Password;
            }
            if (other.HasLp) {
              Lp = other.Lp;
            }
            if (other.HasHandCount) {
              HandCount = other.HandCount;
            }
            if (other.HasDrawCount) {
              DrawCount = other.DrawCount;
            }
            if (other.HasMode) {
              Mode = other.Mode;
            }
            if (other.HasRule) {
              Rule = other.Rule;
            }
            if (other.HasLFList) {
              LFList = other.LFList;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_roomOptionFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _roomOptionFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasName = input.ReadString(ref result.name_);
                  break;
                }
                case 18: {
                  result.hasPassword = input.ReadString(ref result.password_);
                  break;
                }
                case 24: {
                  result.hasLp = input.ReadUInt32(ref result.lp_);
                  break;
                }
                case 32: {
                  result.hasHandCount = input.ReadUInt32(ref result.handCount_);
                  break;
                }
                case 40: {
                  result.hasDrawCount = input.ReadUInt32(ref result.drawCount_);
                  break;
                }
                case 48: {
                  object unknown;
                  if(input.ReadEnum(ref result.mode_, out unknown)) {
                    result.hasMode = true;
                  } else if(unknown is int) {
                    if (unknownFields == null) {
                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                    }
                    unknownFields.MergeVarintField(6, (ulong)(int)unknown);
                  }
                  break;
                }
                case 56: {
                  object unknown;
                  if(input.ReadEnum(ref result.rule_, out unknown)) {
                    result.hasRule = true;
                  } else if(unknown is int) {
                    if (unknownFields == null) {
                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                    }
                    unknownFields.MergeVarintField(7, (ulong)(int)unknown);
                  }
                  break;
                }
                case 64: {
                  result.hasLFList = input.ReadUInt32(ref result.lFList_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasName {
            get { return result.hasName; }
          }
          public string Name {
            get { return result.Name; }
            set { SetName(value); }
          }
          public Builder SetName(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasName = true;
            result.name_ = value;
            return this;
          }
          public Builder ClearName() {
            PrepareBuilder();
            result.hasName = false;
            result.name_ = "";
            return this;
          }
          
          public bool HasPassword {
            get { return result.hasPassword; }
          }
          public string Password {
            get { return result.Password; }
            set { SetPassword(value); }
          }
          public Builder SetPassword(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasPassword = true;
            result.password_ = value;
            return this;
          }
          public Builder ClearPassword() {
            PrepareBuilder();
            result.hasPassword = false;
            result.password_ = "";
            return this;
          }
          
          public bool HasLp {
            get { return result.hasLp; }
          }
          [global::System.CLSCompliant(false)]
          public uint Lp {
            get { return result.Lp; }
            set { SetLp(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetLp(uint value) {
            PrepareBuilder();
            result.hasLp = true;
            result.lp_ = value;
            return this;
          }
          public Builder ClearLp() {
            PrepareBuilder();
            result.hasLp = false;
            result.lp_ = 0;
            return this;
          }
          
          public bool HasHandCount {
            get { return result.hasHandCount; }
          }
          [global::System.CLSCompliant(false)]
          public uint HandCount {
            get { return result.HandCount; }
            set { SetHandCount(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetHandCount(uint value) {
            PrepareBuilder();
            result.hasHandCount = true;
            result.handCount_ = value;
            return this;
          }
          public Builder ClearHandCount() {
            PrepareBuilder();
            result.hasHandCount = false;
            result.handCount_ = 0;
            return this;
          }
          
          public bool HasDrawCount {
            get { return result.hasDrawCount; }
          }
          [global::System.CLSCompliant(false)]
          public uint DrawCount {
            get { return result.DrawCount; }
            set { SetDrawCount(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetDrawCount(uint value) {
            PrepareBuilder();
            result.hasDrawCount = true;
            result.drawCount_ = value;
            return this;
          }
          public Builder ClearDrawCount() {
            PrepareBuilder();
            result.hasDrawCount = false;
            result.drawCount_ = 0;
            return this;
          }
          
          public bool HasMode {
           get { return result.hasMode; }
          }
          public global::protos.Common.Types.RoomMode Mode {
            get { return result.Mode; }
            set { SetMode(value); }
          }
          public Builder SetMode(global::protos.Common.Types.RoomMode value) {
            PrepareBuilder();
            result.hasMode = true;
            result.mode_ = value;
            return this;
          }
          public Builder ClearMode() {
            PrepareBuilder();
            result.hasMode = false;
            result.mode_ = global::protos.Common.Types.RoomMode.Single;
            return this;
          }
          
          public bool HasRule {
           get { return result.hasRule; }
          }
          public global::protos.Common.Types.RoomRule Rule {
            get { return result.Rule; }
            set { SetRule(value); }
          }
          public Builder SetRule(global::protos.Common.Types.RoomRule value) {
            PrepareBuilder();
            result.hasRule = true;
            result.rule_ = value;
            return this;
          }
          public Builder ClearRule() {
            PrepareBuilder();
            result.hasRule = false;
            result.rule_ = global::protos.Common.Types.RoomRule.Ocg;
            return this;
          }
          
          public bool HasLFList {
            get { return result.hasLFList; }
          }
          [global::System.CLSCompliant(false)]
          public uint LFList {
            get { return result.LFList; }
            set { SetLFList(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetLFList(uint value) {
            PrepareBuilder();
            result.hasLFList = true;
            result.lFList_ = value;
            return this;
          }
          public Builder ClearLFList() {
            PrepareBuilder();
            result.hasLFList = false;
            result.lFList_ = 0;
            return this;
          }
        }
        static RoomOption() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Room : pb::GeneratedMessage<Room, Room.Builder> {
        private Room() { }
        private static readonly Room defaultInstance = new Room().MakeReadOnly();
        private static readonly string[] _roomFieldNames = new string[] { "Id", "Option", "Players", "State", "Visitors" };
        private static readonly uint[] _roomFieldTags = new uint[] { 8, 18, 26, 40, 34 };
        public static Room DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Room DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Room ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Common_Room__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Room, Room.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Common_Room__FieldAccessorTable; }
        }
        
        public const int IdFieldNumber = 1;
        private bool hasId;
        private ulong id_;
        public bool HasId {
          get { return hasId; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Id {
          get { return id_; }
        }
        
        public const int OptionFieldNumber = 2;
        private bool hasOption;
        private global::protos.Common.Types.RoomOption option_;
        public bool HasOption {
          get { return hasOption; }
        }
        public global::protos.Common.Types.RoomOption Option {
          get { return option_ ?? global::protos.Common.Types.RoomOption.DefaultInstance; }
        }
        
        public const int PlayersFieldNumber = 3;
        private pbc::PopsicleList<string> players_ = new pbc::PopsicleList<string>();
        public scg::IList<string> PlayersList {
          get { return pbc::Lists.AsReadOnly(players_); }
        }
        public int PlayersCount {
          get { return players_.Count; }
        }
        public string GetPlayers(int index) {
          return players_[index];
        }
        
        public const int VisitorsFieldNumber = 4;
        private pbc::PopsicleList<string> visitors_ = new pbc::PopsicleList<string>();
        public scg::IList<string> VisitorsList {
          get { return pbc::Lists.AsReadOnly(visitors_); }
        }
        public int VisitorsCount {
          get { return visitors_.Count; }
        }
        public string GetVisitors(int index) {
          return visitors_[index];
        }
        
        public const int StateFieldNumber = 5;
        private bool hasState;
        private global::protos.Common.Types.RoomState state_ = global::protos.Common.Types.RoomState.Init;
        public bool HasState {
          get { return hasState; }
        }
        public global::protos.Common.Types.RoomState State {
          get { return state_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _roomFieldNames;
          if (hasId) {
            output.WriteUInt64(1, field_names[0], Id);
          }
          if (hasOption) {
            output.WriteMessage(2, field_names[1], Option);
          }
          if (players_.Count > 0) {
            output.WriteStringArray(3, field_names[2], players_);
          }
          if (visitors_.Count > 0) {
            output.WriteStringArray(4, field_names[4], visitors_);
          }
          if (hasState) {
            output.WriteEnum(5, field_names[3], (int) State, State);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasId) {
            size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
          }
          if (hasOption) {
            size += pb::CodedOutputStream.ComputeMessageSize(2, Option);
          }
          {
            int dataSize = 0;
            foreach (string element in PlayersList) {
              dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * players_.Count;
          }
          {
            int dataSize = 0;
            foreach (string element in VisitorsList) {
              dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * visitors_.Count;
          }
          if (hasState) {
            size += pb::CodedOutputStream.ComputeEnumSize(5, (int) State);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Room ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Room ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Room ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Room ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Room ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Room ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Room ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Room ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Room ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Room ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Room MakeReadOnly() {
          players_.MakeReadOnly();
          visitors_.MakeReadOnly();
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Room prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Room, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Room cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Room result;
          
          private Room PrepareBuilder() {
            if (resultIsReadOnly) {
              Room original = result;
              result = new Room();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Room MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Common.Types.Room.Descriptor; }
          }
          
          public override Room DefaultInstanceForType {
            get { return global::protos.Common.Types.Room.DefaultInstance; }
          }
          
          public override Room BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Room) {
              return MergeFrom((Room) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Room other) {
            if (other == global::protos.Common.Types.Room.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasId) {
              Id = other.Id;
            }
            if (other.HasOption) {
              MergeOption(other.Option);
            }
            if (other.players_.Count != 0) {
              result.players_.Add(other.players_);
            }
            if (other.visitors_.Count != 0) {
              result.visitors_.Add(other.visitors_);
            }
            if (other.HasState) {
              State = other.State;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_roomFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _roomFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasId = input.ReadUInt64(ref result.id_);
                  break;
                }
                case 18: {
                  global::protos.Common.Types.RoomOption.Builder subBuilder = global::protos.Common.Types.RoomOption.CreateBuilder();
                  if (result.hasOption) {
                    subBuilder.MergeFrom(Option);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Option = subBuilder.BuildPartial();
                  break;
                }
                case 26: {
                  input.ReadStringArray(tag, field_name, result.players_);
                  break;
                }
                case 34: {
                  input.ReadStringArray(tag, field_name, result.visitors_);
                  break;
                }
                case 40: {
                  object unknown;
                  if(input.ReadEnum(ref result.state_, out unknown)) {
                    result.hasState = true;
                  } else if(unknown is int) {
                    if (unknownFields == null) {
                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                    }
                    unknownFields.MergeVarintField(5, (ulong)(int)unknown);
                  }
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasId {
            get { return result.hasId; }
          }
          [global::System.CLSCompliant(false)]
          public ulong Id {
            get { return result.Id; }
            set { SetId(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetId(ulong value) {
            PrepareBuilder();
            result.hasId = true;
            result.id_ = value;
            return this;
          }
          public Builder ClearId() {
            PrepareBuilder();
            result.hasId = false;
            result.id_ = 0UL;
            return this;
          }
          
          public bool HasOption {
           get { return result.hasOption; }
          }
          public global::protos.Common.Types.RoomOption Option {
            get { return result.Option; }
            set { SetOption(value); }
          }
          public Builder SetOption(global::protos.Common.Types.RoomOption value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasOption = true;
            result.option_ = value;
            return this;
          }
          public Builder SetOption(global::protos.Common.Types.RoomOption.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasOption = true;
            result.option_ = builderForValue.Build();
            return this;
          }
          public Builder MergeOption(global::protos.Common.Types.RoomOption value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasOption &&
                result.option_ != global::protos.Common.Types.RoomOption.DefaultInstance) {
                result.option_ = global::protos.Common.Types.RoomOption.CreateBuilder(result.option_).MergeFrom(value).BuildPartial();
            } else {
              result.option_ = value;
            }
            result.hasOption = true;
            return this;
          }
          public Builder ClearOption() {
            PrepareBuilder();
            result.hasOption = false;
            result.option_ = null;
            return this;
          }
          
          public pbc::IPopsicleList<string> PlayersList {
            get { return PrepareBuilder().players_; }
          }
          public int PlayersCount {
            get { return result.PlayersCount; }
          }
          public string GetPlayers(int index) {
            return result.GetPlayers(index);
          }
          public Builder SetPlayers(int index, string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.players_[index] = value;
            return this;
          }
          public Builder AddPlayers(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.players_.Add(value);
            return this;
          }
          public Builder AddRangePlayers(scg::IEnumerable<string> values) {
            PrepareBuilder();
            result.players_.Add(values);
            return this;
          }
          public Builder ClearPlayers() {
            PrepareBuilder();
            result.players_.Clear();
            return this;
          }
          
          public pbc::IPopsicleList<string> VisitorsList {
            get { return PrepareBuilder().visitors_; }
          }
          public int VisitorsCount {
            get { return result.VisitorsCount; }
          }
          public string GetVisitors(int index) {
            return result.GetVisitors(index);
          }
          public Builder SetVisitors(int index, string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.visitors_[index] = value;
            return this;
          }
          public Builder AddVisitors(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.visitors_.Add(value);
            return this;
          }
          public Builder AddRangeVisitors(scg::IEnumerable<string> values) {
            PrepareBuilder();
            result.visitors_.Add(values);
            return this;
          }
          public Builder ClearVisitors() {
            PrepareBuilder();
            result.visitors_.Clear();
            return this;
          }
          
          public bool HasState {
           get { return result.hasState; }
          }
          public global::protos.Common.Types.RoomState State {
            get { return result.State; }
            set { SetState(value); }
          }
          public Builder SetState(global::protos.Common.Types.RoomState value) {
            PrepareBuilder();
            result.hasState = true;
            result.state_ = value;
            return this;
          }
          public Builder ClearState() {
            PrepareBuilder();
            result.hasState = false;
            result.state_ = global::protos.Common.Types.RoomState.Init;
            return this;
          }
        }
        static Room() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _commonFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Common ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Common ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Common ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Common ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Common ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Common ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Common ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Common ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Common ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Common ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Common MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Common prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Common, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Common cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Common result;
      
      private Common PrepareBuilder() {
        if (resultIsReadOnly) {
          Common original = result;
          result = new Common();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Common MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Common.Descriptor; }
      }
      
      public override Common DefaultInstanceForType {
        get { return global::protos.Common.DefaultInstance; }
      }
      
      public override Common BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Common) {
          return MergeFrom((Common) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Common other) {
        if (other == global::protos.Common.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_commonFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _commonFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Common() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Auth : pb::GeneratedMessage<Auth, Auth.Builder> {
    private Auth() { }
    private static readonly Auth defaultInstance = new Auth().MakeReadOnly();
    private static readonly string[] _authFieldNames = new string[] {  };
    private static readonly uint[] _authFieldTags = new uint[] {  };
    public static Auth DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Auth DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Auth ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Auth__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Auth, Auth.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Auth__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class AuthRequest : pb::GeneratedMessage<AuthRequest, AuthRequest.Builder> {
        private AuthRequest() { }
        private static readonly AuthRequest defaultInstance = new AuthRequest().MakeReadOnly();
        private static readonly string[] _authRequestFieldNames = new string[] { "Account", "Password" };
        private static readonly uint[] _authRequestFieldTags = new uint[] { 10, 18 };
        public static AuthRequest DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override AuthRequest DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override AuthRequest ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Auth_AuthRequest__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<AuthRequest, AuthRequest.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Auth_AuthRequest__FieldAccessorTable; }
        }
        
        public const int AccountFieldNumber = 1;
        private bool hasAccount;
        private string account_ = "";
        public bool HasAccount {
          get { return hasAccount; }
        }
        public string Account {
          get { return account_; }
        }
        
        public const int PasswordFieldNumber = 2;
        private bool hasPassword;
        private pb::ByteString password_ = pb::ByteString.Empty;
        public bool HasPassword {
          get { return hasPassword; }
        }
        public pb::ByteString Password {
          get { return password_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _authRequestFieldNames;
          if (hasAccount) {
            output.WriteString(1, field_names[0], Account);
          }
          if (hasPassword) {
            output.WriteBytes(2, field_names[1], Password);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasAccount) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Account);
          }
          if (hasPassword) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, Password);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static AuthRequest ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AuthRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AuthRequest ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AuthRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AuthRequest ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AuthRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static AuthRequest ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static AuthRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static AuthRequest ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AuthRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private AuthRequest MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(AuthRequest prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<AuthRequest, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(AuthRequest cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private AuthRequest result;
          
          private AuthRequest PrepareBuilder() {
            if (resultIsReadOnly) {
              AuthRequest original = result;
              result = new AuthRequest();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override AuthRequest MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Auth.Types.AuthRequest.Descriptor; }
          }
          
          public override AuthRequest DefaultInstanceForType {
            get { return global::protos.Auth.Types.AuthRequest.DefaultInstance; }
          }
          
          public override AuthRequest BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is AuthRequest) {
              return MergeFrom((AuthRequest) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(AuthRequest other) {
            if (other == global::protos.Auth.Types.AuthRequest.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasAccount) {
              Account = other.Account;
            }
            if (other.HasPassword) {
              Password = other.Password;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_authRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _authRequestFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasAccount = input.ReadString(ref result.account_);
                  break;
                }
                case 18: {
                  result.hasPassword = input.ReadBytes(ref result.password_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasAccount {
            get { return result.hasAccount; }
          }
          public string Account {
            get { return result.Account; }
            set { SetAccount(value); }
          }
          public Builder SetAccount(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasAccount = true;
            result.account_ = value;
            return this;
          }
          public Builder ClearAccount() {
            PrepareBuilder();
            result.hasAccount = false;
            result.account_ = "";
            return this;
          }
          
          public bool HasPassword {
            get { return result.hasPassword; }
          }
          public pb::ByteString Password {
            get { return result.Password; }
            set { SetPassword(value); }
          }
          public Builder SetPassword(pb::ByteString value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasPassword = true;
            result.password_ = value;
            return this;
          }
          public Builder ClearPassword() {
            PrepareBuilder();
            result.hasPassword = false;
            result.password_ = pb::ByteString.Empty;
            return this;
          }
        }
        static AuthRequest() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class AuthResponse : pb::GeneratedMessage<AuthResponse, AuthResponse.Builder> {
        private AuthResponse() { }
        private static readonly AuthResponse defaultInstance = new AuthResponse().MakeReadOnly();
        private static readonly string[] _authResponseFieldNames = new string[] { "Reason", "Success" };
        private static readonly uint[] _authResponseFieldTags = new uint[] { 18, 8 };
        public static AuthResponse DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override AuthResponse DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override AuthResponse ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Auth_AuthResponse__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<AuthResponse, AuthResponse.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Auth_AuthResponse__FieldAccessorTable; }
        }
        
        public const int SuccessFieldNumber = 1;
        private bool hasSuccess;
        private bool success_;
        public bool HasSuccess {
          get { return hasSuccess; }
        }
        public bool Success {
          get { return success_; }
        }
        
        public const int ReasonFieldNumber = 2;
        private bool hasReason;
        private string reason_ = "";
        public bool HasReason {
          get { return hasReason; }
        }
        public string Reason {
          get { return reason_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _authResponseFieldNames;
          if (hasSuccess) {
            output.WriteBool(1, field_names[1], Success);
          }
          if (hasReason) {
            output.WriteString(2, field_names[0], Reason);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasSuccess) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
          }
          if (hasReason) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Reason);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static AuthResponse ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AuthResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AuthResponse ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static AuthResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static AuthResponse ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AuthResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static AuthResponse ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static AuthResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static AuthResponse ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static AuthResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private AuthResponse MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(AuthResponse prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<AuthResponse, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(AuthResponse cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private AuthResponse result;
          
          private AuthResponse PrepareBuilder() {
            if (resultIsReadOnly) {
              AuthResponse original = result;
              result = new AuthResponse();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override AuthResponse MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Auth.Types.AuthResponse.Descriptor; }
          }
          
          public override AuthResponse DefaultInstanceForType {
            get { return global::protos.Auth.Types.AuthResponse.DefaultInstance; }
          }
          
          public override AuthResponse BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is AuthResponse) {
              return MergeFrom((AuthResponse) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(AuthResponse other) {
            if (other == global::protos.Auth.Types.AuthResponse.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasSuccess) {
              Success = other.Success;
            }
            if (other.HasReason) {
              Reason = other.Reason;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_authResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _authResponseFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasSuccess = input.ReadBool(ref result.success_);
                  break;
                }
                case 18: {
                  result.hasReason = input.ReadString(ref result.reason_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasSuccess {
            get { return result.hasSuccess; }
          }
          public bool Success {
            get { return result.Success; }
            set { SetSuccess(value); }
          }
          public Builder SetSuccess(bool value) {
            PrepareBuilder();
            result.hasSuccess = true;
            result.success_ = value;
            return this;
          }
          public Builder ClearSuccess() {
            PrepareBuilder();
            result.hasSuccess = false;
            result.success_ = false;
            return this;
          }
          
          public bool HasReason {
            get { return result.hasReason; }
          }
          public string Reason {
            get { return result.Reason; }
            set { SetReason(value); }
          }
          public Builder SetReason(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasReason = true;
            result.reason_ = value;
            return this;
          }
          public Builder ClearReason() {
            PrepareBuilder();
            result.hasReason = false;
            result.reason_ = "";
            return this;
          }
        }
        static AuthResponse() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RegisterRequest : pb::GeneratedMessage<RegisterRequest, RegisterRequest.Builder> {
        private RegisterRequest() { }
        private static readonly RegisterRequest defaultInstance = new RegisterRequest().MakeReadOnly();
        private static readonly string[] _registerRequestFieldNames = new string[] { "Account", "Password" };
        private static readonly uint[] _registerRequestFieldTags = new uint[] { 10, 18 };
        public static RegisterRequest DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RegisterRequest DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RegisterRequest ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Auth_RegisterRequest__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RegisterRequest, RegisterRequest.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Auth_RegisterRequest__FieldAccessorTable; }
        }
        
        public const int AccountFieldNumber = 1;
        private bool hasAccount;
        private string account_ = "";
        public bool HasAccount {
          get { return hasAccount; }
        }
        public string Account {
          get { return account_; }
        }
        
        public const int PasswordFieldNumber = 2;
        private bool hasPassword;
        private pb::ByteString password_ = pb::ByteString.Empty;
        public bool HasPassword {
          get { return hasPassword; }
        }
        public pb::ByteString Password {
          get { return password_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _registerRequestFieldNames;
          if (hasAccount) {
            output.WriteString(1, field_names[0], Account);
          }
          if (hasPassword) {
            output.WriteBytes(2, field_names[1], Password);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasAccount) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Account);
          }
          if (hasPassword) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, Password);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RegisterRequest ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RegisterRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RegisterRequest ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RegisterRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RegisterRequest ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RegisterRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RegisterRequest ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RegisterRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RegisterRequest ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RegisterRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RegisterRequest MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RegisterRequest prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RegisterRequest, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RegisterRequest cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RegisterRequest result;
          
          private RegisterRequest PrepareBuilder() {
            if (resultIsReadOnly) {
              RegisterRequest original = result;
              result = new RegisterRequest();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RegisterRequest MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Auth.Types.RegisterRequest.Descriptor; }
          }
          
          public override RegisterRequest DefaultInstanceForType {
            get { return global::protos.Auth.Types.RegisterRequest.DefaultInstance; }
          }
          
          public override RegisterRequest BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RegisterRequest) {
              return MergeFrom((RegisterRequest) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RegisterRequest other) {
            if (other == global::protos.Auth.Types.RegisterRequest.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasAccount) {
              Account = other.Account;
            }
            if (other.HasPassword) {
              Password = other.Password;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_registerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _registerRequestFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasAccount = input.ReadString(ref result.account_);
                  break;
                }
                case 18: {
                  result.hasPassword = input.ReadBytes(ref result.password_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasAccount {
            get { return result.hasAccount; }
          }
          public string Account {
            get { return result.Account; }
            set { SetAccount(value); }
          }
          public Builder SetAccount(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasAccount = true;
            result.account_ = value;
            return this;
          }
          public Builder ClearAccount() {
            PrepareBuilder();
            result.hasAccount = false;
            result.account_ = "";
            return this;
          }
          
          public bool HasPassword {
            get { return result.hasPassword; }
          }
          public pb::ByteString Password {
            get { return result.Password; }
            set { SetPassword(value); }
          }
          public Builder SetPassword(pb::ByteString value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasPassword = true;
            result.password_ = value;
            return this;
          }
          public Builder ClearPassword() {
            PrepareBuilder();
            result.hasPassword = false;
            result.password_ = pb::ByteString.Empty;
            return this;
          }
        }
        static RegisterRequest() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RegisterResponse : pb::GeneratedMessage<RegisterResponse, RegisterResponse.Builder> {
        private RegisterResponse() { }
        private static readonly RegisterResponse defaultInstance = new RegisterResponse().MakeReadOnly();
        private static readonly string[] _registerResponseFieldNames = new string[] { "Reason", "Success" };
        private static readonly uint[] _registerResponseFieldTags = new uint[] { 18, 8 };
        public static RegisterResponse DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RegisterResponse DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RegisterResponse ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Auth_RegisterResponse__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RegisterResponse, RegisterResponse.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Auth_RegisterResponse__FieldAccessorTable; }
        }
        
        public const int SuccessFieldNumber = 1;
        private bool hasSuccess;
        private bool success_;
        public bool HasSuccess {
          get { return hasSuccess; }
        }
        public bool Success {
          get { return success_; }
        }
        
        public const int ReasonFieldNumber = 2;
        private bool hasReason;
        private string reason_ = "";
        public bool HasReason {
          get { return hasReason; }
        }
        public string Reason {
          get { return reason_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _registerResponseFieldNames;
          if (hasSuccess) {
            output.WriteBool(1, field_names[1], Success);
          }
          if (hasReason) {
            output.WriteString(2, field_names[0], Reason);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasSuccess) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
          }
          if (hasReason) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Reason);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RegisterResponse ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RegisterResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RegisterResponse ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RegisterResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RegisterResponse ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RegisterResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RegisterResponse ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RegisterResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RegisterResponse ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RegisterResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RegisterResponse MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RegisterResponse prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RegisterResponse, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RegisterResponse cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RegisterResponse result;
          
          private RegisterResponse PrepareBuilder() {
            if (resultIsReadOnly) {
              RegisterResponse original = result;
              result = new RegisterResponse();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RegisterResponse MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Auth.Types.RegisterResponse.Descriptor; }
          }
          
          public override RegisterResponse DefaultInstanceForType {
            get { return global::protos.Auth.Types.RegisterResponse.DefaultInstance; }
          }
          
          public override RegisterResponse BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RegisterResponse) {
              return MergeFrom((RegisterResponse) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RegisterResponse other) {
            if (other == global::protos.Auth.Types.RegisterResponse.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasSuccess) {
              Success = other.Success;
            }
            if (other.HasReason) {
              Reason = other.Reason;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_registerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _registerResponseFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasSuccess = input.ReadBool(ref result.success_);
                  break;
                }
                case 18: {
                  result.hasReason = input.ReadString(ref result.reason_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasSuccess {
            get { return result.hasSuccess; }
          }
          public bool Success {
            get { return result.Success; }
            set { SetSuccess(value); }
          }
          public Builder SetSuccess(bool value) {
            PrepareBuilder();
            result.hasSuccess = true;
            result.success_ = value;
            return this;
          }
          public Builder ClearSuccess() {
            PrepareBuilder();
            result.hasSuccess = false;
            result.success_ = false;
            return this;
          }
          
          public bool HasReason {
            get { return result.hasReason; }
          }
          public string Reason {
            get { return result.Reason; }
            set { SetReason(value); }
          }
          public Builder SetReason(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasReason = true;
            result.reason_ = value;
            return this;
          }
          public Builder ClearReason() {
            PrepareBuilder();
            result.hasReason = false;
            result.reason_ = "";
            return this;
          }
        }
        static RegisterResponse() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _authFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Auth ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Auth ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Auth ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Auth ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Auth ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Auth ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Auth ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Auth ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Auth ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Auth ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Auth MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Auth prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Auth, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Auth cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Auth result;
      
      private Auth PrepareBuilder() {
        if (resultIsReadOnly) {
          Auth original = result;
          result = new Auth();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Auth MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Auth.Descriptor; }
      }
      
      public override Auth DefaultInstanceForType {
        get { return global::protos.Auth.DefaultInstance; }
      }
      
      public override Auth BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Auth) {
          return MergeFrom((Auth) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Auth other) {
        if (other == global::protos.Auth.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_authFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _authFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Auth() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Chat : pb::GeneratedMessage<Chat, Chat.Builder> {
    private Chat() { }
    private static readonly Chat defaultInstance = new Chat().MakeReadOnly();
    private static readonly string[] _chatFieldNames = new string[] {  };
    private static readonly uint[] _chatFieldTags = new uint[] {  };
    public static Chat DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Chat DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Chat ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Chat__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Chat, Chat.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Chat__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class HallRequest : pb::GeneratedMessage<HallRequest, HallRequest.Builder> {
        private HallRequest() { }
        private static readonly HallRequest defaultInstance = new HallRequest().MakeReadOnly();
        private static readonly string[] _hallRequestFieldNames = new string[] { "Content" };
        private static readonly uint[] _hallRequestFieldTags = new uint[] { 10 };
        public static HallRequest DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override HallRequest DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override HallRequest ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Chat_HallRequest__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<HallRequest, HallRequest.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Chat_HallRequest__FieldAccessorTable; }
        }
        
        public const int ContentFieldNumber = 1;
        private bool hasContent;
        private string content_ = "";
        public bool HasContent {
          get { return hasContent; }
        }
        public string Content {
          get { return content_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _hallRequestFieldNames;
          if (hasContent) {
            output.WriteString(1, field_names[0], Content);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasContent) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Content);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static HallRequest ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static HallRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static HallRequest ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static HallRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static HallRequest ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static HallRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static HallRequest ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static HallRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static HallRequest ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static HallRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private HallRequest MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(HallRequest prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<HallRequest, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(HallRequest cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private HallRequest result;
          
          private HallRequest PrepareBuilder() {
            if (resultIsReadOnly) {
              HallRequest original = result;
              result = new HallRequest();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override HallRequest MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Chat.Types.HallRequest.Descriptor; }
          }
          
          public override HallRequest DefaultInstanceForType {
            get { return global::protos.Chat.Types.HallRequest.DefaultInstance; }
          }
          
          public override HallRequest BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is HallRequest) {
              return MergeFrom((HallRequest) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(HallRequest other) {
            if (other == global::protos.Chat.Types.HallRequest.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasContent) {
              Content = other.Content;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_hallRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _hallRequestFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasContent = input.ReadString(ref result.content_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasContent {
            get { return result.hasContent; }
          }
          public string Content {
            get { return result.Content; }
            set { SetContent(value); }
          }
          public Builder SetContent(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasContent = true;
            result.content_ = value;
            return this;
          }
          public Builder ClearContent() {
            PrepareBuilder();
            result.hasContent = false;
            result.content_ = "";
            return this;
          }
        }
        static HallRequest() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Hall : pb::GeneratedMessage<Hall, Hall.Builder> {
        private Hall() { }
        private static readonly Hall defaultInstance = new Hall().MakeReadOnly();
        private static readonly string[] _hallFieldNames = new string[] { "Account", "Content" };
        private static readonly uint[] _hallFieldTags = new uint[] { 10, 18 };
        public static Hall DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Hall DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Hall ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Chat_Hall__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Hall, Hall.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Chat_Hall__FieldAccessorTable; }
        }
        
        public const int AccountFieldNumber = 1;
        private bool hasAccount;
        private string account_ = "";
        public bool HasAccount {
          get { return hasAccount; }
        }
        public string Account {
          get { return account_; }
        }
        
        public const int ContentFieldNumber = 2;
        private bool hasContent;
        private string content_ = "";
        public bool HasContent {
          get { return hasContent; }
        }
        public string Content {
          get { return content_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _hallFieldNames;
          if (hasAccount) {
            output.WriteString(1, field_names[0], Account);
          }
          if (hasContent) {
            output.WriteString(2, field_names[1], Content);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasAccount) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Account);
          }
          if (hasContent) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Content);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Hall ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Hall ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Hall ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Hall ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Hall ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Hall ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Hall ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Hall ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Hall ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Hall ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Hall MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Hall prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Hall, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Hall cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Hall result;
          
          private Hall PrepareBuilder() {
            if (resultIsReadOnly) {
              Hall original = result;
              result = new Hall();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Hall MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Chat.Types.Hall.Descriptor; }
          }
          
          public override Hall DefaultInstanceForType {
            get { return global::protos.Chat.Types.Hall.DefaultInstance; }
          }
          
          public override Hall BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Hall) {
              return MergeFrom((Hall) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Hall other) {
            if (other == global::protos.Chat.Types.Hall.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasAccount) {
              Account = other.Account;
            }
            if (other.HasContent) {
              Content = other.Content;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_hallFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _hallFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasAccount = input.ReadString(ref result.account_);
                  break;
                }
                case 18: {
                  result.hasContent = input.ReadString(ref result.content_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasAccount {
            get { return result.hasAccount; }
          }
          public string Account {
            get { return result.Account; }
            set { SetAccount(value); }
          }
          public Builder SetAccount(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasAccount = true;
            result.account_ = value;
            return this;
          }
          public Builder ClearAccount() {
            PrepareBuilder();
            result.hasAccount = false;
            result.account_ = "";
            return this;
          }
          
          public bool HasContent {
            get { return result.hasContent; }
          }
          public string Content {
            get { return result.Content; }
            set { SetContent(value); }
          }
          public Builder SetContent(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasContent = true;
            result.content_ = value;
            return this;
          }
          public Builder ClearContent() {
            PrepareBuilder();
            result.hasContent = false;
            result.content_ = "";
            return this;
          }
        }
        static Hall() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Chat ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Chat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Chat ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Chat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Chat ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Chat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Chat ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Chat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Chat ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Chat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Chat MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Chat prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Chat, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Chat cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Chat result;
      
      private Chat PrepareBuilder() {
        if (resultIsReadOnly) {
          Chat original = result;
          result = new Chat();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Chat MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Chat.Descriptor; }
      }
      
      public override Chat DefaultInstanceForType {
        get { return global::protos.Chat.DefaultInstance; }
      }
      
      public override Chat BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Chat) {
          return MergeFrom((Chat) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Chat other) {
        if (other == global::protos.Chat.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Chat() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Hall : pb::GeneratedMessage<Hall, Hall.Builder> {
    private Hall() { }
    private static readonly Hall defaultInstance = new Hall().MakeReadOnly();
    private static readonly string[] _hallFieldNames = new string[] {  };
    private static readonly uint[] _hallFieldTags = new uint[] {  };
    public static Hall DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Hall DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Hall ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Hall__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Hall, Hall.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Hall__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class CreateRoomRequest : pb::GeneratedMessage<CreateRoomRequest, CreateRoomRequest.Builder> {
        private CreateRoomRequest() { }
        private static readonly CreateRoomRequest defaultInstance = new CreateRoomRequest().MakeReadOnly();
        private static readonly string[] _createRoomRequestFieldNames = new string[] { "Option" };
        private static readonly uint[] _createRoomRequestFieldTags = new uint[] { 10 };
        public static CreateRoomRequest DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override CreateRoomRequest DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override CreateRoomRequest ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_CreateRoomRequest__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<CreateRoomRequest, CreateRoomRequest.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_CreateRoomRequest__FieldAccessorTable; }
        }
        
        public const int OptionFieldNumber = 1;
        private bool hasOption;
        private global::protos.Common.Types.RoomOption option_;
        public bool HasOption {
          get { return hasOption; }
        }
        public global::protos.Common.Types.RoomOption Option {
          get { return option_ ?? global::protos.Common.Types.RoomOption.DefaultInstance; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _createRoomRequestFieldNames;
          if (hasOption) {
            output.WriteMessage(1, field_names[0], Option);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasOption) {
            size += pb::CodedOutputStream.ComputeMessageSize(1, Option);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static CreateRoomRequest ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static CreateRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static CreateRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static CreateRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private CreateRoomRequest MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(CreateRoomRequest prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<CreateRoomRequest, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(CreateRoomRequest cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private CreateRoomRequest result;
          
          private CreateRoomRequest PrepareBuilder() {
            if (resultIsReadOnly) {
              CreateRoomRequest original = result;
              result = new CreateRoomRequest();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override CreateRoomRequest MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.CreateRoomRequest.Descriptor; }
          }
          
          public override CreateRoomRequest DefaultInstanceForType {
            get { return global::protos.Hall.Types.CreateRoomRequest.DefaultInstance; }
          }
          
          public override CreateRoomRequest BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is CreateRoomRequest) {
              return MergeFrom((CreateRoomRequest) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(CreateRoomRequest other) {
            if (other == global::protos.Hall.Types.CreateRoomRequest.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOption) {
              MergeOption(other.Option);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_createRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _createRoomRequestFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  global::protos.Common.Types.RoomOption.Builder subBuilder = global::protos.Common.Types.RoomOption.CreateBuilder();
                  if (result.hasOption) {
                    subBuilder.MergeFrom(Option);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Option = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOption {
           get { return result.hasOption; }
          }
          public global::protos.Common.Types.RoomOption Option {
            get { return result.Option; }
            set { SetOption(value); }
          }
          public Builder SetOption(global::protos.Common.Types.RoomOption value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasOption = true;
            result.option_ = value;
            return this;
          }
          public Builder SetOption(global::protos.Common.Types.RoomOption.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasOption = true;
            result.option_ = builderForValue.Build();
            return this;
          }
          public Builder MergeOption(global::protos.Common.Types.RoomOption value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasOption &&
                result.option_ != global::protos.Common.Types.RoomOption.DefaultInstance) {
                result.option_ = global::protos.Common.Types.RoomOption.CreateBuilder(result.option_).MergeFrom(value).BuildPartial();
            } else {
              result.option_ = value;
            }
            result.hasOption = true;
            return this;
          }
          public Builder ClearOption() {
            PrepareBuilder();
            result.hasOption = false;
            result.option_ = null;
            return this;
          }
        }
        static CreateRoomRequest() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class EnterRoomRequest : pb::GeneratedMessage<EnterRoomRequest, EnterRoomRequest.Builder> {
        private EnterRoomRequest() { }
        private static readonly EnterRoomRequest defaultInstance = new EnterRoomRequest().MakeReadOnly();
        private static readonly string[] _enterRoomRequestFieldNames = new string[] { "Id", "Password" };
        private static readonly uint[] _enterRoomRequestFieldTags = new uint[] { 8, 18 };
        public static EnterRoomRequest DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override EnterRoomRequest DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override EnterRoomRequest ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_EnterRoomRequest__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<EnterRoomRequest, EnterRoomRequest.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_EnterRoomRequest__FieldAccessorTable; }
        }
        
        public const int IdFieldNumber = 1;
        private bool hasId;
        private ulong id_;
        public bool HasId {
          get { return hasId; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Id {
          get { return id_; }
        }
        
        public const int PasswordFieldNumber = 2;
        private bool hasPassword;
        private string password_ = "";
        public bool HasPassword {
          get { return hasPassword; }
        }
        public string Password {
          get { return password_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _enterRoomRequestFieldNames;
          if (hasId) {
            output.WriteUInt64(1, field_names[0], Id);
          }
          if (hasPassword) {
            output.WriteString(2, field_names[1], Password);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasId) {
            size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
          }
          if (hasPassword) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Password);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static EnterRoomRequest ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static EnterRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static EnterRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static EnterRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private EnterRoomRequest MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(EnterRoomRequest prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<EnterRoomRequest, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(EnterRoomRequest cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private EnterRoomRequest result;
          
          private EnterRoomRequest PrepareBuilder() {
            if (resultIsReadOnly) {
              EnterRoomRequest original = result;
              result = new EnterRoomRequest();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override EnterRoomRequest MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.EnterRoomRequest.Descriptor; }
          }
          
          public override EnterRoomRequest DefaultInstanceForType {
            get { return global::protos.Hall.Types.EnterRoomRequest.DefaultInstance; }
          }
          
          public override EnterRoomRequest BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is EnterRoomRequest) {
              return MergeFrom((EnterRoomRequest) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(EnterRoomRequest other) {
            if (other == global::protos.Hall.Types.EnterRoomRequest.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasId) {
              Id = other.Id;
            }
            if (other.HasPassword) {
              Password = other.Password;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_enterRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _enterRoomRequestFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasId = input.ReadUInt64(ref result.id_);
                  break;
                }
                case 18: {
                  result.hasPassword = input.ReadString(ref result.password_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasId {
            get { return result.hasId; }
          }
          [global::System.CLSCompliant(false)]
          public ulong Id {
            get { return result.Id; }
            set { SetId(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetId(ulong value) {
            PrepareBuilder();
            result.hasId = true;
            result.id_ = value;
            return this;
          }
          public Builder ClearId() {
            PrepareBuilder();
            result.hasId = false;
            result.id_ = 0UL;
            return this;
          }
          
          public bool HasPassword {
            get { return result.hasPassword; }
          }
          public string Password {
            get { return result.Password; }
            set { SetPassword(value); }
          }
          public Builder SetPassword(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasPassword = true;
            result.password_ = value;
            return this;
          }
          public Builder ClearPassword() {
            PrepareBuilder();
            result.hasPassword = false;
            result.password_ = "";
            return this;
          }
        }
        static EnterRoomRequest() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class YouEnter : pb::GeneratedMessage<YouEnter, YouEnter.Builder> {
        private YouEnter() { }
        private static readonly YouEnter defaultInstance = new YouEnter().MakeReadOnly();
        private static readonly string[] _youEnterFieldNames = new string[] {  };
        private static readonly uint[] _youEnterFieldTags = new uint[] {  };
        public static YouEnter DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override YouEnter DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override YouEnter ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_YouEnter__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<YouEnter, YouEnter.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_YouEnter__FieldAccessorTable; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _youEnterFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static YouEnter ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static YouEnter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static YouEnter ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static YouEnter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static YouEnter ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static YouEnter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static YouEnter ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static YouEnter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static YouEnter ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static YouEnter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private YouEnter MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(YouEnter prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<YouEnter, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(YouEnter cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private YouEnter result;
          
          private YouEnter PrepareBuilder() {
            if (resultIsReadOnly) {
              YouEnter original = result;
              result = new YouEnter();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override YouEnter MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.YouEnter.Descriptor; }
          }
          
          public override YouEnter DefaultInstanceForType {
            get { return global::protos.Hall.Types.YouEnter.DefaultInstance; }
          }
          
          public override YouEnter BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is YouEnter) {
              return MergeFrom((YouEnter) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(YouEnter other) {
            if (other == global::protos.Hall.Types.YouEnter.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_youEnterFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _youEnterFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static YouEnter() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class YouLeave : pb::GeneratedMessage<YouLeave, YouLeave.Builder> {
        private YouLeave() { }
        private static readonly YouLeave defaultInstance = new YouLeave().MakeReadOnly();
        private static readonly string[] _youLeaveFieldNames = new string[] {  };
        private static readonly uint[] _youLeaveFieldTags = new uint[] {  };
        public static YouLeave DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override YouLeave DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override YouLeave ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_YouLeave__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<YouLeave, YouLeave.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_YouLeave__FieldAccessorTable; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _youLeaveFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static YouLeave ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static YouLeave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static YouLeave ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static YouLeave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static YouLeave ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static YouLeave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static YouLeave ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static YouLeave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static YouLeave ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static YouLeave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private YouLeave MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(YouLeave prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<YouLeave, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(YouLeave cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private YouLeave result;
          
          private YouLeave PrepareBuilder() {
            if (resultIsReadOnly) {
              YouLeave original = result;
              result = new YouLeave();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override YouLeave MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.YouLeave.Descriptor; }
          }
          
          public override YouLeave DefaultInstanceForType {
            get { return global::protos.Hall.Types.YouLeave.DefaultInstance; }
          }
          
          public override YouLeave BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is YouLeave) {
              return MergeFrom((YouLeave) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(YouLeave other) {
            if (other == global::protos.Hall.Types.YouLeave.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_youLeaveFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _youLeaveFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static YouLeave() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RoomList : pb::GeneratedMessage<RoomList, RoomList.Builder> {
        private RoomList() { }
        private static readonly RoomList defaultInstance = new RoomList().MakeReadOnly();
        private static readonly string[] _roomListFieldNames = new string[] { "List" };
        private static readonly uint[] _roomListFieldTags = new uint[] { 10 };
        public static RoomList DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RoomList DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RoomList ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomList__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RoomList, RoomList.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomList__FieldAccessorTable; }
        }
        
        public const int ListFieldNumber = 1;
        private pbc::PopsicleList<global::protos.Common.Types.Room> list_ = new pbc::PopsicleList<global::protos.Common.Types.Room>();
        public scg::IList<global::protos.Common.Types.Room> ListList {
          get { return list_; }
        }
        public int ListCount {
          get { return list_.Count; }
        }
        public global::protos.Common.Types.Room GetList(int index) {
          return list_[index];
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _roomListFieldNames;
          if (list_.Count > 0) {
            output.WriteMessageArray(1, field_names[0], list_);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          foreach (global::protos.Common.Types.Room element in ListList) {
            size += pb::CodedOutputStream.ComputeMessageSize(1, element);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RoomList ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomList ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomList ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RoomList ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RoomList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RoomList ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RoomList MakeReadOnly() {
          list_.MakeReadOnly();
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RoomList prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RoomList, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RoomList cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RoomList result;
          
          private RoomList PrepareBuilder() {
            if (resultIsReadOnly) {
              RoomList original = result;
              result = new RoomList();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RoomList MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.RoomList.Descriptor; }
          }
          
          public override RoomList DefaultInstanceForType {
            get { return global::protos.Hall.Types.RoomList.DefaultInstance; }
          }
          
          public override RoomList BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RoomList) {
              return MergeFrom((RoomList) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RoomList other) {
            if (other == global::protos.Hall.Types.RoomList.DefaultInstance) return this;
            PrepareBuilder();
            if (other.list_.Count != 0) {
              result.list_.Add(other.list_);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_roomListFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _roomListFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  input.ReadMessageArray(tag, field_name, result.list_, global::protos.Common.Types.Room.DefaultInstance, extensionRegistry);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public pbc::IPopsicleList<global::protos.Common.Types.Room> ListList {
            get { return PrepareBuilder().list_; }
          }
          public int ListCount {
            get { return result.ListCount; }
          }
          public global::protos.Common.Types.Room GetList(int index) {
            return result.GetList(index);
          }
          public Builder SetList(int index, global::protos.Common.Types.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.list_[index] = value;
            return this;
          }
          public Builder SetList(int index, global::protos.Common.Types.Room.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.list_[index] = builderForValue.Build();
            return this;
          }
          public Builder AddList(global::protos.Common.Types.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.list_.Add(value);
            return this;
          }
          public Builder AddList(global::protos.Common.Types.Room.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.list_.Add(builderForValue.Build());
            return this;
          }
          public Builder AddRangeList(scg::IEnumerable<global::protos.Common.Types.Room> values) {
            PrepareBuilder();
            result.list_.Add(values);
            return this;
          }
          public Builder ClearList() {
            PrepareBuilder();
            result.list_.Clear();
            return this;
          }
        }
        static RoomList() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RoomCreated : pb::GeneratedMessage<RoomCreated, RoomCreated.Builder> {
        private RoomCreated() { }
        private static readonly RoomCreated defaultInstance = new RoomCreated().MakeReadOnly();
        private static readonly string[] _roomCreatedFieldNames = new string[] { "Room" };
        private static readonly uint[] _roomCreatedFieldTags = new uint[] { 10 };
        public static RoomCreated DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RoomCreated DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RoomCreated ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomCreated__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RoomCreated, RoomCreated.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomCreated__FieldAccessorTable; }
        }
        
        public const int RoomFieldNumber = 1;
        private bool hasRoom;
        private global::protos.Common.Types.Room room_;
        public bool HasRoom {
          get { return hasRoom; }
        }
        public global::protos.Common.Types.Room Room {
          get { return room_ ?? global::protos.Common.Types.Room.DefaultInstance; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _roomCreatedFieldNames;
          if (hasRoom) {
            output.WriteMessage(1, field_names[0], Room);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasRoom) {
            size += pb::CodedOutputStream.ComputeMessageSize(1, Room);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RoomCreated ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomCreated ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomCreated ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomCreated ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomCreated ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomCreated ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RoomCreated ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RoomCreated ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RoomCreated ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomCreated ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RoomCreated MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RoomCreated prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RoomCreated, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RoomCreated cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RoomCreated result;
          
          private RoomCreated PrepareBuilder() {
            if (resultIsReadOnly) {
              RoomCreated original = result;
              result = new RoomCreated();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RoomCreated MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.RoomCreated.Descriptor; }
          }
          
          public override RoomCreated DefaultInstanceForType {
            get { return global::protos.Hall.Types.RoomCreated.DefaultInstance; }
          }
          
          public override RoomCreated BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RoomCreated) {
              return MergeFrom((RoomCreated) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RoomCreated other) {
            if (other == global::protos.Hall.Types.RoomCreated.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasRoom) {
              MergeRoom(other.Room);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_roomCreatedFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _roomCreatedFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  global::protos.Common.Types.Room.Builder subBuilder = global::protos.Common.Types.Room.CreateBuilder();
                  if (result.hasRoom) {
                    subBuilder.MergeFrom(Room);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Room = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasRoom {
           get { return result.hasRoom; }
          }
          public global::protos.Common.Types.Room Room {
            get { return result.Room; }
            set { SetRoom(value); }
          }
          public Builder SetRoom(global::protos.Common.Types.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = value;
            return this;
          }
          public Builder SetRoom(global::protos.Common.Types.Room.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = builderForValue.Build();
            return this;
          }
          public Builder MergeRoom(global::protos.Common.Types.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasRoom &&
                result.room_ != global::protos.Common.Types.Room.DefaultInstance) {
                result.room_ = global::protos.Common.Types.Room.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
            } else {
              result.room_ = value;
            }
            result.hasRoom = true;
            return this;
          }
          public Builder ClearRoom() {
            PrepareBuilder();
            result.hasRoom = false;
            result.room_ = null;
            return this;
          }
        }
        static RoomCreated() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RoomDead : pb::GeneratedMessage<RoomDead, RoomDead.Builder> {
        private RoomDead() { }
        private static readonly RoomDead defaultInstance = new RoomDead().MakeReadOnly();
        private static readonly string[] _roomDeadFieldNames = new string[] { "Id" };
        private static readonly uint[] _roomDeadFieldTags = new uint[] { 8 };
        public static RoomDead DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RoomDead DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RoomDead ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomDead__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RoomDead, RoomDead.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomDead__FieldAccessorTable; }
        }
        
        public const int IdFieldNumber = 1;
        private bool hasId;
        private ulong id_;
        public bool HasId {
          get { return hasId; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Id {
          get { return id_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _roomDeadFieldNames;
          if (hasId) {
            output.WriteUInt64(1, field_names[0], Id);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasId) {
            size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RoomDead ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomDead ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomDead ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomDead ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomDead ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomDead ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RoomDead ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RoomDead ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RoomDead ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomDead ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RoomDead MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RoomDead prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RoomDead, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RoomDead cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RoomDead result;
          
          private RoomDead PrepareBuilder() {
            if (resultIsReadOnly) {
              RoomDead original = result;
              result = new RoomDead();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RoomDead MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.RoomDead.Descriptor; }
          }
          
          public override RoomDead DefaultInstanceForType {
            get { return global::protos.Hall.Types.RoomDead.DefaultInstance; }
          }
          
          public override RoomDead BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RoomDead) {
              return MergeFrom((RoomDead) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RoomDead other) {
            if (other == global::protos.Hall.Types.RoomDead.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasId) {
              Id = other.Id;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_roomDeadFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _roomDeadFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasId = input.ReadUInt64(ref result.id_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasId {
            get { return result.hasId; }
          }
          [global::System.CLSCompliant(false)]
          public ulong Id {
            get { return result.Id; }
            set { SetId(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetId(ulong value) {
            PrepareBuilder();
            result.hasId = true;
            result.id_ = value;
            return this;
          }
          public Builder ClearId() {
            PrepareBuilder();
            result.hasId = false;
            result.id_ = 0UL;
            return this;
          }
        }
        static RoomDead() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RoomStateChanged : pb::GeneratedMessage<RoomStateChanged, RoomStateChanged.Builder> {
        private RoomStateChanged() { }
        private static readonly RoomStateChanged defaultInstance = new RoomStateChanged().MakeReadOnly();
        private static readonly string[] _roomStateChangedFieldNames = new string[] { "Room" };
        private static readonly uint[] _roomStateChangedFieldTags = new uint[] { 10 };
        public static RoomStateChanged DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RoomStateChanged DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RoomStateChanged ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomStateChanged__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RoomStateChanged, RoomStateChanged.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Hall_RoomStateChanged__FieldAccessorTable; }
        }
        
        public const int RoomFieldNumber = 1;
        private bool hasRoom;
        private global::protos.Common.Types.Room room_;
        public bool HasRoom {
          get { return hasRoom; }
        }
        public global::protos.Common.Types.Room Room {
          get { return room_ ?? global::protos.Common.Types.Room.DefaultInstance; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _roomStateChangedFieldNames;
          if (hasRoom) {
            output.WriteMessage(1, field_names[0], Room);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasRoom) {
            size += pb::CodedOutputStream.ComputeMessageSize(1, Room);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RoomStateChanged ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RoomStateChanged ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RoomStateChanged ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RoomStateChanged ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RoomStateChanged MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RoomStateChanged prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RoomStateChanged, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RoomStateChanged cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RoomStateChanged result;
          
          private RoomStateChanged PrepareBuilder() {
            if (resultIsReadOnly) {
              RoomStateChanged original = result;
              result = new RoomStateChanged();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RoomStateChanged MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Hall.Types.RoomStateChanged.Descriptor; }
          }
          
          public override RoomStateChanged DefaultInstanceForType {
            get { return global::protos.Hall.Types.RoomStateChanged.DefaultInstance; }
          }
          
          public override RoomStateChanged BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RoomStateChanged) {
              return MergeFrom((RoomStateChanged) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RoomStateChanged other) {
            if (other == global::protos.Hall.Types.RoomStateChanged.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasRoom) {
              MergeRoom(other.Room);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_roomStateChangedFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _roomStateChangedFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  global::protos.Common.Types.Room.Builder subBuilder = global::protos.Common.Types.Room.CreateBuilder();
                  if (result.hasRoom) {
                    subBuilder.MergeFrom(Room);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Room = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasRoom {
           get { return result.hasRoom; }
          }
          public global::protos.Common.Types.Room Room {
            get { return result.Room; }
            set { SetRoom(value); }
          }
          public Builder SetRoom(global::protos.Common.Types.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = value;
            return this;
          }
          public Builder SetRoom(global::protos.Common.Types.Room.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = builderForValue.Build();
            return this;
          }
          public Builder MergeRoom(global::protos.Common.Types.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasRoom &&
                result.room_ != global::protos.Common.Types.Room.DefaultInstance) {
                result.room_ = global::protos.Common.Types.Room.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
            } else {
              result.room_ = value;
            }
            result.hasRoom = true;
            return this;
          }
          public Builder ClearRoom() {
            PrepareBuilder();
            result.hasRoom = false;
            result.room_ = null;
            return this;
          }
        }
        static RoomStateChanged() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _hallFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Hall ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Hall ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Hall ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Hall ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Hall ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Hall ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Hall ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Hall ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Hall ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Hall ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Hall MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Hall prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Hall, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Hall cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Hall result;
      
      private Hall PrepareBuilder() {
        if (resultIsReadOnly) {
          Hall original = result;
          result = new Hall();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Hall MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Hall.Descriptor; }
      }
      
      public override Hall DefaultInstanceForType {
        get { return global::protos.Hall.DefaultInstance; }
      }
      
      public override Hall BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Hall) {
          return MergeFrom((Hall) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Hall other) {
        if (other == global::protos.Hall.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_hallFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _hallFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Hall() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Duel : pb::GeneratedMessage<Duel, Duel.Builder> {
    private Duel() { }
    private static readonly Duel defaultInstance = new Duel().MakeReadOnly();
    private static readonly string[] _duelFieldNames = new string[] {  };
    private static readonly uint[] _duelFieldTags = new uint[] {  };
    public static Duel DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Duel DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Duel ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Duel__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Duel, Duel.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Duel__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class DataTransfer : pb::GeneratedMessage<DataTransfer, DataTransfer.Builder> {
        private DataTransfer() { }
        private static readonly DataTransfer defaultInstance = new DataTransfer().MakeReadOnly();
        private static readonly string[] _dataTransferFieldNames = new string[] { "Data" };
        private static readonly uint[] _dataTransferFieldTags = new uint[] { 10 };
        public static DataTransfer DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override DataTransfer DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override DataTransfer ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Duel_DataTransfer__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<DataTransfer, DataTransfer.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Duel_DataTransfer__FieldAccessorTable; }
        }
        
        public const int DataFieldNumber = 1;
        private bool hasData;
        private pb::ByteString data_ = pb::ByteString.Empty;
        public bool HasData {
          get { return hasData; }
        }
        public pb::ByteString Data {
          get { return data_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _dataTransferFieldNames;
          if (hasData) {
            output.WriteBytes(1, field_names[0], Data);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasData) {
            size += pb::CodedOutputStream.ComputeBytesSize(1, Data);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static DataTransfer ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static DataTransfer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static DataTransfer ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static DataTransfer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static DataTransfer ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static DataTransfer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static DataTransfer ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static DataTransfer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static DataTransfer ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static DataTransfer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private DataTransfer MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(DataTransfer prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<DataTransfer, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(DataTransfer cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private DataTransfer result;
          
          private DataTransfer PrepareBuilder() {
            if (resultIsReadOnly) {
              DataTransfer original = result;
              result = new DataTransfer();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override DataTransfer MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Duel.Types.DataTransfer.Descriptor; }
          }
          
          public override DataTransfer DefaultInstanceForType {
            get { return global::protos.Duel.Types.DataTransfer.DefaultInstance; }
          }
          
          public override DataTransfer BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is DataTransfer) {
              return MergeFrom((DataTransfer) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(DataTransfer other) {
            if (other == global::protos.Duel.Types.DataTransfer.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasData) {
              Data = other.Data;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_dataTransferFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _dataTransferFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasData = input.ReadBytes(ref result.data_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasData {
            get { return result.hasData; }
          }
          public pb::ByteString Data {
            get { return result.Data; }
            set { SetData(value); }
          }
          public Builder SetData(pb::ByteString value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasData = true;
            result.data_ = value;
            return this;
          }
          public Builder ClearData() {
            PrepareBuilder();
            result.hasData = false;
            result.data_ = pb::ByteString.Empty;
            return this;
          }
        }
        static DataTransfer() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _duelFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Duel ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Duel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Duel ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Duel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Duel ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Duel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Duel ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Duel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Duel ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Duel ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Duel MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Duel prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Duel, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Duel cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Duel result;
      
      private Duel PrepareBuilder() {
        if (resultIsReadOnly) {
          Duel original = result;
          result = new Duel();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Duel MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Duel.Descriptor; }
      }
      
      public override Duel DefaultInstanceForType {
        get { return global::protos.Duel.DefaultInstance; }
      }
      
      public override Duel BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Duel) {
          return MergeFrom((Duel) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Duel other) {
        if (other == global::protos.Duel.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_duelFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _duelFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Duel() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Null : pb::GeneratedMessage<Null, Null.Builder> {
    private Null() { }
    private static readonly Null defaultInstance = new Null().MakeReadOnly();
    private static readonly string[] _nullFieldNames = new string[] {  };
    private static readonly uint[] _nullFieldTags = new uint[] {  };
    public static Null DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Null DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Null ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Null__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Null, Null.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Null__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nullFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Null ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Null ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Null ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Null ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Null ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Null ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Null ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Null ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Null ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Null ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Null MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Null prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Null, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Null cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Null result;
      
      private Null PrepareBuilder() {
        if (resultIsReadOnly) {
          Null original = result;
          result = new Null();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Null MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Null.Descriptor; }
      }
      
      public override Null DefaultInstanceForType {
        get { return global::protos.Null.DefaultInstance; }
      }
      
      public override Null BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Null) {
          return MergeFrom((Null) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Null other) {
        if (other == global::protos.Null.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nullFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nullFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Null() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Internal : pb::GeneratedMessage<Internal, Internal.Builder> {
    private Internal() { }
    private static readonly Internal defaultInstance = new Internal().MakeReadOnly();
    private static readonly string[] _internalFieldNames = new string[] {  };
    private static readonly uint[] _internalFieldTags = new uint[] {  };
    public static Internal DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Internal DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Internal ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protos.Protos.internal__static_protos_Internal__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Internal, Internal.Builder> InternalFieldAccessors {
      get { return global::protos.Protos.internal__static_protos_Internal__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Global : pb::GeneratedMessage<Global, Global.Builder> {
        private Global() { }
        private static readonly Global defaultInstance = new Global().MakeReadOnly();
        private static readonly string[] _globalFieldNames = new string[] {  };
        private static readonly uint[] _globalFieldTags = new uint[] {  };
        public static Global DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Global DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Global ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Internal_Global__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Global, Global.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Internal_Global__FieldAccessorTable; }
        }
        
        #region Nested types
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class Locker : pb::GeneratedMessage<Locker, Locker.Builder> {
            private Locker() { }
            private static readonly Locker defaultInstance = new Locker().MakeReadOnly();
            private static readonly string[] _lockerFieldNames = new string[] {  };
            private static readonly uint[] _lockerFieldTags = new uint[] {  };
            public static Locker DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override Locker DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override Locker ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Global_Locker__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<Locker, Locker.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Global_Locker__FieldAccessorTable; }
            }
            
            #region Nested types
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static partial class Types {
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class AcquireRequest : pb::GeneratedMessage<AcquireRequest, AcquireRequest.Builder> {
                private AcquireRequest() { }
                private static readonly AcquireRequest defaultInstance = new AcquireRequest().MakeReadOnly();
                private static readonly string[] _acquireRequestFieldNames = new string[] { "Key" };
                private static readonly uint[] _acquireRequestFieldTags = new uint[] { 10 };
                public static AcquireRequest DefaultInstance {
                  get { return defaultInstance; }
                }
                
                public override AcquireRequest DefaultInstanceForType {
                  get { return DefaultInstance; }
                }
                
                protected override AcquireRequest ThisMessage {
                  get { return this; }
                }
                
                public static pbd::MessageDescriptor Descriptor {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_Locker_AcquireRequest__Descriptor; }
                }
                
                protected override pb::FieldAccess.FieldAccessorTable<AcquireRequest, AcquireRequest.Builder> InternalFieldAccessors {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_Locker_AcquireRequest__FieldAccessorTable; }
                }
                
                public const int KeyFieldNumber = 1;
                private bool hasKey;
                private string key_ = "";
                public bool HasKey {
                  get { return hasKey; }
                }
                public string Key {
                  get { return key_; }
                }
                
                public override bool IsInitialized {
                  get {
                    return true;
                  }
                }
                
                public override void WriteTo(pb::ICodedOutputStream output) {
                  CalcSerializedSize();
                  string[] field_names = _acquireRequestFieldNames;
                  if (hasKey) {
                    output.WriteString(1, field_names[0], Key);
                  }
                  UnknownFields.WriteTo(output);
                }
                
                private int memoizedSerializedSize = -1;
                public override int SerializedSize {
                  get {
                    int size = memoizedSerializedSize;
                    if (size != -1) return size;
                    return CalcSerializedSize();
                  }
                }
                
                private int CalcSerializedSize() {
                  int size = memoizedSerializedSize;
                  if (size != -1) return size;
                  
                  size = 0;
                  if (hasKey) {
                    size += pb::CodedOutputStream.ComputeStringSize(1, Key);
                  }
                  size += UnknownFields.SerializedSize;
                  memoizedSerializedSize = size;
                  return size;
                }
                public static AcquireRequest ParseFrom(pb::ByteString data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static AcquireRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static AcquireRequest ParseFrom(byte[] data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static AcquireRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static AcquireRequest ParseFrom(global::System.IO.Stream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static AcquireRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                public static AcquireRequest ParseDelimitedFrom(global::System.IO.Stream input) {
                  return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
                }
                public static AcquireRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
                }
                public static AcquireRequest ParseFrom(pb::ICodedInputStream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static AcquireRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                private AcquireRequest MakeReadOnly() {
                  return this;
                }
                
                public static Builder CreateBuilder() { return new Builder(); }
                public override Builder ToBuilder() { return CreateBuilder(this); }
                public override Builder CreateBuilderForType() { return new Builder(); }
                public static Builder CreateBuilder(AcquireRequest prototype) {
                  return new Builder(prototype);
                }
                
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                public sealed partial class Builder : pb::GeneratedBuilder<AcquireRequest, Builder> {
                  protected override Builder ThisBuilder {
                    get { return this; }
                  }
                  public Builder() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                  }
                  internal Builder(AcquireRequest cloneFrom) {
                    result = cloneFrom;
                    resultIsReadOnly = true;
                  }
                  
                  private bool resultIsReadOnly;
                  private AcquireRequest result;
                  
                  private AcquireRequest PrepareBuilder() {
                    if (resultIsReadOnly) {
                      AcquireRequest original = result;
                      result = new AcquireRequest();
                      resultIsReadOnly = false;
                      MergeFrom(original);
                    }
                    return result;
                  }
                  
                  public override bool IsInitialized {
                    get { return result.IsInitialized; }
                  }
                  
                  protected override AcquireRequest MessageBeingBuilt {
                    get { return PrepareBuilder(); }
                  }
                  
                  public override Builder Clear() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                    return this;
                  }
                  
                  public override Builder Clone() {
                    if (resultIsReadOnly) {
                      return new Builder(result);
                    } else {
                      return new Builder().MergeFrom(result);
                    }
                  }
                  
                  public override pbd::MessageDescriptor DescriptorForType {
                    get { return global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest.Descriptor; }
                  }
                  
                  public override AcquireRequest DefaultInstanceForType {
                    get { return global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest.DefaultInstance; }
                  }
                  
                  public override AcquireRequest BuildPartial() {
                    if (resultIsReadOnly) {
                      return result;
                    }
                    resultIsReadOnly = true;
                    return result.MakeReadOnly();
                  }
                  
                  public override Builder MergeFrom(pb::IMessage other) {
                    if (other is AcquireRequest) {
                      return MergeFrom((AcquireRequest) other);
                    } else {
                      base.MergeFrom(other);
                      return this;
                    }
                  }
                  
                  public override Builder MergeFrom(AcquireRequest other) {
                    if (other == global::protos.Internal.Types.Global.Types.Locker.Types.AcquireRequest.DefaultInstance) return this;
                    PrepareBuilder();
                    if (other.HasKey) {
                      Key = other.Key;
                    }
                    this.MergeUnknownFields(other.UnknownFields);
                    return this;
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input) {
                    return MergeFrom(input, pb::ExtensionRegistry.Empty);
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                    PrepareBuilder();
                    pb::UnknownFieldSet.Builder unknownFields = null;
                    uint tag;
                    string field_name;
                    while (input.ReadTag(out tag, out field_name)) {
                      if(tag == 0 && field_name != null) {
                        int field_ordinal = global::System.Array.BinarySearch(_acquireRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if(field_ordinal >= 0)
                          tag = _acquireRequestFieldTags[field_ordinal];
                        else {
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          continue;
                        }
                      }
                      switch (tag) {
                        case 0: {
                          throw pb::InvalidProtocolBufferException.InvalidTag();
                        }
                        default: {
                          if (pb::WireFormat.IsEndGroupTag(tag)) {
                            if (unknownFields != null) {
                              this.UnknownFields = unknownFields.Build();
                            }
                            return this;
                          }
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          break;
                        }
                        case 10: {
                          result.hasKey = input.ReadString(ref result.key_);
                          break;
                        }
                      }
                    }
                    
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  
                  
                  public bool HasKey {
                    get { return result.hasKey; }
                  }
                  public string Key {
                    get { return result.Key; }
                    set { SetKey(value); }
                  }
                  public Builder SetKey(string value) {
                    pb::ThrowHelper.ThrowIfNull(value, "value");
                    PrepareBuilder();
                    result.hasKey = true;
                    result.key_ = value;
                    return this;
                  }
                  public Builder ClearKey() {
                    PrepareBuilder();
                    result.hasKey = false;
                    result.key_ = "";
                    return this;
                  }
                }
                static AcquireRequest() {
                  object.ReferenceEquals(global::protos.Protos.Descriptor, null);
                }
              }
              
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class ReleaseRequest : pb::GeneratedMessage<ReleaseRequest, ReleaseRequest.Builder> {
                private ReleaseRequest() { }
                private static readonly ReleaseRequest defaultInstance = new ReleaseRequest().MakeReadOnly();
                private static readonly string[] _releaseRequestFieldNames = new string[] { "Key" };
                private static readonly uint[] _releaseRequestFieldTags = new uint[] { 10 };
                public static ReleaseRequest DefaultInstance {
                  get { return defaultInstance; }
                }
                
                public override ReleaseRequest DefaultInstanceForType {
                  get { return DefaultInstance; }
                }
                
                protected override ReleaseRequest ThisMessage {
                  get { return this; }
                }
                
                public static pbd::MessageDescriptor Descriptor {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_Locker_ReleaseRequest__Descriptor; }
                }
                
                protected override pb::FieldAccess.FieldAccessorTable<ReleaseRequest, ReleaseRequest.Builder> InternalFieldAccessors {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_Locker_ReleaseRequest__FieldAccessorTable; }
                }
                
                public const int KeyFieldNumber = 1;
                private bool hasKey;
                private string key_ = "";
                public bool HasKey {
                  get { return hasKey; }
                }
                public string Key {
                  get { return key_; }
                }
                
                public override bool IsInitialized {
                  get {
                    return true;
                  }
                }
                
                public override void WriteTo(pb::ICodedOutputStream output) {
                  CalcSerializedSize();
                  string[] field_names = _releaseRequestFieldNames;
                  if (hasKey) {
                    output.WriteString(1, field_names[0], Key);
                  }
                  UnknownFields.WriteTo(output);
                }
                
                private int memoizedSerializedSize = -1;
                public override int SerializedSize {
                  get {
                    int size = memoizedSerializedSize;
                    if (size != -1) return size;
                    return CalcSerializedSize();
                  }
                }
                
                private int CalcSerializedSize() {
                  int size = memoizedSerializedSize;
                  if (size != -1) return size;
                  
                  size = 0;
                  if (hasKey) {
                    size += pb::CodedOutputStream.ComputeStringSize(1, Key);
                  }
                  size += UnknownFields.SerializedSize;
                  memoizedSerializedSize = size;
                  return size;
                }
                public static ReleaseRequest ParseFrom(pb::ByteString data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(byte[] data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(global::System.IO.Stream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                public static ReleaseRequest ParseDelimitedFrom(global::System.IO.Stream input) {
                  return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
                }
                public static ReleaseRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(pb::ICodedInputStream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static ReleaseRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                private ReleaseRequest MakeReadOnly() {
                  return this;
                }
                
                public static Builder CreateBuilder() { return new Builder(); }
                public override Builder ToBuilder() { return CreateBuilder(this); }
                public override Builder CreateBuilderForType() { return new Builder(); }
                public static Builder CreateBuilder(ReleaseRequest prototype) {
                  return new Builder(prototype);
                }
                
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                public sealed partial class Builder : pb::GeneratedBuilder<ReleaseRequest, Builder> {
                  protected override Builder ThisBuilder {
                    get { return this; }
                  }
                  public Builder() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                  }
                  internal Builder(ReleaseRequest cloneFrom) {
                    result = cloneFrom;
                    resultIsReadOnly = true;
                  }
                  
                  private bool resultIsReadOnly;
                  private ReleaseRequest result;
                  
                  private ReleaseRequest PrepareBuilder() {
                    if (resultIsReadOnly) {
                      ReleaseRequest original = result;
                      result = new ReleaseRequest();
                      resultIsReadOnly = false;
                      MergeFrom(original);
                    }
                    return result;
                  }
                  
                  public override bool IsInitialized {
                    get { return result.IsInitialized; }
                  }
                  
                  protected override ReleaseRequest MessageBeingBuilt {
                    get { return PrepareBuilder(); }
                  }
                  
                  public override Builder Clear() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                    return this;
                  }
                  
                  public override Builder Clone() {
                    if (resultIsReadOnly) {
                      return new Builder(result);
                    } else {
                      return new Builder().MergeFrom(result);
                    }
                  }
                  
                  public override pbd::MessageDescriptor DescriptorForType {
                    get { return global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest.Descriptor; }
                  }
                  
                  public override ReleaseRequest DefaultInstanceForType {
                    get { return global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest.DefaultInstance; }
                  }
                  
                  public override ReleaseRequest BuildPartial() {
                    if (resultIsReadOnly) {
                      return result;
                    }
                    resultIsReadOnly = true;
                    return result.MakeReadOnly();
                  }
                  
                  public override Builder MergeFrom(pb::IMessage other) {
                    if (other is ReleaseRequest) {
                      return MergeFrom((ReleaseRequest) other);
                    } else {
                      base.MergeFrom(other);
                      return this;
                    }
                  }
                  
                  public override Builder MergeFrom(ReleaseRequest other) {
                    if (other == global::protos.Internal.Types.Global.Types.Locker.Types.ReleaseRequest.DefaultInstance) return this;
                    PrepareBuilder();
                    if (other.HasKey) {
                      Key = other.Key;
                    }
                    this.MergeUnknownFields(other.UnknownFields);
                    return this;
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input) {
                    return MergeFrom(input, pb::ExtensionRegistry.Empty);
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                    PrepareBuilder();
                    pb::UnknownFieldSet.Builder unknownFields = null;
                    uint tag;
                    string field_name;
                    while (input.ReadTag(out tag, out field_name)) {
                      if(tag == 0 && field_name != null) {
                        int field_ordinal = global::System.Array.BinarySearch(_releaseRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if(field_ordinal >= 0)
                          tag = _releaseRequestFieldTags[field_ordinal];
                        else {
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          continue;
                        }
                      }
                      switch (tag) {
                        case 0: {
                          throw pb::InvalidProtocolBufferException.InvalidTag();
                        }
                        default: {
                          if (pb::WireFormat.IsEndGroupTag(tag)) {
                            if (unknownFields != null) {
                              this.UnknownFields = unknownFields.Build();
                            }
                            return this;
                          }
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          break;
                        }
                        case 10: {
                          result.hasKey = input.ReadString(ref result.key_);
                          break;
                        }
                      }
                    }
                    
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  
                  
                  public bool HasKey {
                    get { return result.hasKey; }
                  }
                  public string Key {
                    get { return result.Key; }
                    set { SetKey(value); }
                  }
                  public Builder SetKey(string value) {
                    pb::ThrowHelper.ThrowIfNull(value, "value");
                    PrepareBuilder();
                    result.hasKey = true;
                    result.key_ = value;
                    return this;
                  }
                  public Builder ClearKey() {
                    PrepareBuilder();
                    result.hasKey = false;
                    result.key_ = "";
                    return this;
                  }
                }
                static ReleaseRequest() {
                  object.ReferenceEquals(global::protos.Protos.Descriptor, null);
                }
              }
              
            }
            #endregion
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _lockerFieldNames;
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static Locker ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static Locker ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static Locker ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static Locker ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static Locker ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static Locker ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static Locker ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static Locker ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static Locker ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static Locker ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private Locker MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(Locker prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<Locker, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(Locker cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private Locker result;
              
              private Locker PrepareBuilder() {
                if (resultIsReadOnly) {
                  Locker original = result;
                  result = new Locker();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override Locker MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Global.Types.Locker.Descriptor; }
              }
              
              public override Locker DefaultInstanceForType {
                get { return global::protos.Internal.Types.Global.Types.Locker.DefaultInstance; }
              }
              
              public override Locker BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is Locker) {
                  return MergeFrom((Locker) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(Locker other) {
                if (other == global::protos.Internal.Types.Global.Types.Locker.DefaultInstance) return this;
                PrepareBuilder();
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_lockerFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _lockerFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
            }
            static Locker() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class OnlineState : pb::GeneratedMessage<OnlineState, OnlineState.Builder> {
            private OnlineState() { }
            private static readonly OnlineState defaultInstance = new OnlineState().MakeReadOnly();
            private static readonly string[] _onlineStateFieldNames = new string[] {  };
            private static readonly uint[] _onlineStateFieldTags = new uint[] {  };
            public static OnlineState DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override OnlineState DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override OnlineState ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<OnlineState, OnlineState.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState__FieldAccessorTable; }
            }
            
            #region Nested types
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static partial class Types {
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class QueryRequest : pb::GeneratedMessage<QueryRequest, QueryRequest.Builder> {
                private QueryRequest() { }
                private static readonly QueryRequest defaultInstance = new QueryRequest().MakeReadOnly();
                private static readonly string[] _queryRequestFieldNames = new string[] { "Account" };
                private static readonly uint[] _queryRequestFieldTags = new uint[] { 10 };
                public static QueryRequest DefaultInstance {
                  get { return defaultInstance; }
                }
                
                public override QueryRequest DefaultInstanceForType {
                  get { return DefaultInstance; }
                }
                
                protected override QueryRequest ThisMessage {
                  get { return this; }
                }
                
                public static pbd::MessageDescriptor Descriptor {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState_QueryRequest__Descriptor; }
                }
                
                protected override pb::FieldAccess.FieldAccessorTable<QueryRequest, QueryRequest.Builder> InternalFieldAccessors {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState_QueryRequest__FieldAccessorTable; }
                }
                
                public const int AccountFieldNumber = 1;
                private bool hasAccount;
                private string account_ = "";
                public bool HasAccount {
                  get { return hasAccount; }
                }
                public string Account {
                  get { return account_; }
                }
                
                public override bool IsInitialized {
                  get {
                    return true;
                  }
                }
                
                public override void WriteTo(pb::ICodedOutputStream output) {
                  CalcSerializedSize();
                  string[] field_names = _queryRequestFieldNames;
                  if (hasAccount) {
                    output.WriteString(1, field_names[0], Account);
                  }
                  UnknownFields.WriteTo(output);
                }
                
                private int memoizedSerializedSize = -1;
                public override int SerializedSize {
                  get {
                    int size = memoizedSerializedSize;
                    if (size != -1) return size;
                    return CalcSerializedSize();
                  }
                }
                
                private int CalcSerializedSize() {
                  int size = memoizedSerializedSize;
                  if (size != -1) return size;
                  
                  size = 0;
                  if (hasAccount) {
                    size += pb::CodedOutputStream.ComputeStringSize(1, Account);
                  }
                  size += UnknownFields.SerializedSize;
                  memoizedSerializedSize = size;
                  return size;
                }
                public static QueryRequest ParseFrom(pb::ByteString data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static QueryRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static QueryRequest ParseFrom(byte[] data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static QueryRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static QueryRequest ParseFrom(global::System.IO.Stream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static QueryRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                public static QueryRequest ParseDelimitedFrom(global::System.IO.Stream input) {
                  return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
                }
                public static QueryRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
                }
                public static QueryRequest ParseFrom(pb::ICodedInputStream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static QueryRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                private QueryRequest MakeReadOnly() {
                  return this;
                }
                
                public static Builder CreateBuilder() { return new Builder(); }
                public override Builder ToBuilder() { return CreateBuilder(this); }
                public override Builder CreateBuilderForType() { return new Builder(); }
                public static Builder CreateBuilder(QueryRequest prototype) {
                  return new Builder(prototype);
                }
                
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                public sealed partial class Builder : pb::GeneratedBuilder<QueryRequest, Builder> {
                  protected override Builder ThisBuilder {
                    get { return this; }
                  }
                  public Builder() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                  }
                  internal Builder(QueryRequest cloneFrom) {
                    result = cloneFrom;
                    resultIsReadOnly = true;
                  }
                  
                  private bool resultIsReadOnly;
                  private QueryRequest result;
                  
                  private QueryRequest PrepareBuilder() {
                    if (resultIsReadOnly) {
                      QueryRequest original = result;
                      result = new QueryRequest();
                      resultIsReadOnly = false;
                      MergeFrom(original);
                    }
                    return result;
                  }
                  
                  public override bool IsInitialized {
                    get { return result.IsInitialized; }
                  }
                  
                  protected override QueryRequest MessageBeingBuilt {
                    get { return PrepareBuilder(); }
                  }
                  
                  public override Builder Clear() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                    return this;
                  }
                  
                  public override Builder Clone() {
                    if (resultIsReadOnly) {
                      return new Builder(result);
                    } else {
                      return new Builder().MergeFrom(result);
                    }
                  }
                  
                  public override pbd::MessageDescriptor DescriptorForType {
                    get { return global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest.Descriptor; }
                  }
                  
                  public override QueryRequest DefaultInstanceForType {
                    get { return global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest.DefaultInstance; }
                  }
                  
                  public override QueryRequest BuildPartial() {
                    if (resultIsReadOnly) {
                      return result;
                    }
                    resultIsReadOnly = true;
                    return result.MakeReadOnly();
                  }
                  
                  public override Builder MergeFrom(pb::IMessage other) {
                    if (other is QueryRequest) {
                      return MergeFrom((QueryRequest) other);
                    } else {
                      base.MergeFrom(other);
                      return this;
                    }
                  }
                  
                  public override Builder MergeFrom(QueryRequest other) {
                    if (other == global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryRequest.DefaultInstance) return this;
                    PrepareBuilder();
                    if (other.HasAccount) {
                      Account = other.Account;
                    }
                    this.MergeUnknownFields(other.UnknownFields);
                    return this;
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input) {
                    return MergeFrom(input, pb::ExtensionRegistry.Empty);
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                    PrepareBuilder();
                    pb::UnknownFieldSet.Builder unknownFields = null;
                    uint tag;
                    string field_name;
                    while (input.ReadTag(out tag, out field_name)) {
                      if(tag == 0 && field_name != null) {
                        int field_ordinal = global::System.Array.BinarySearch(_queryRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if(field_ordinal >= 0)
                          tag = _queryRequestFieldTags[field_ordinal];
                        else {
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          continue;
                        }
                      }
                      switch (tag) {
                        case 0: {
                          throw pb::InvalidProtocolBufferException.InvalidTag();
                        }
                        default: {
                          if (pb::WireFormat.IsEndGroupTag(tag)) {
                            if (unknownFields != null) {
                              this.UnknownFields = unknownFields.Build();
                            }
                            return this;
                          }
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          break;
                        }
                        case 10: {
                          result.hasAccount = input.ReadString(ref result.account_);
                          break;
                        }
                      }
                    }
                    
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  
                  
                  public bool HasAccount {
                    get { return result.hasAccount; }
                  }
                  public string Account {
                    get { return result.Account; }
                    set { SetAccount(value); }
                  }
                  public Builder SetAccount(string value) {
                    pb::ThrowHelper.ThrowIfNull(value, "value");
                    PrepareBuilder();
                    result.hasAccount = true;
                    result.account_ = value;
                    return this;
                  }
                  public Builder ClearAccount() {
                    PrepareBuilder();
                    result.hasAccount = false;
                    result.account_ = "";
                    return this;
                  }
                }
                static QueryRequest() {
                  object.ReferenceEquals(global::protos.Protos.Descriptor, null);
                }
              }
              
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class QueryResponse : pb::GeneratedMessage<QueryResponse, QueryResponse.Builder> {
                private QueryResponse() { }
                private static readonly QueryResponse defaultInstance = new QueryResponse().MakeReadOnly();
                private static readonly string[] _queryResponseFieldNames = new string[] { "Session", "State", "Where" };
                private static readonly uint[] _queryResponseFieldTags = new uint[] { 24, 8, 18 };
                public static QueryResponse DefaultInstance {
                  get { return defaultInstance; }
                }
                
                public override QueryResponse DefaultInstanceForType {
                  get { return DefaultInstance; }
                }
                
                protected override QueryResponse ThisMessage {
                  get { return this; }
                }
                
                public static pbd::MessageDescriptor Descriptor {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState_QueryResponse__Descriptor; }
                }
                
                protected override pb::FieldAccess.FieldAccessorTable<QueryResponse, QueryResponse.Builder> InternalFieldAccessors {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState_QueryResponse__FieldAccessorTable; }
                }
                
                public const int StateFieldNumber = 1;
                private bool hasState;
                private bool state_;
                public bool HasState {
                  get { return hasState; }
                }
                public bool State {
                  get { return state_; }
                }
                
                public const int WhereFieldNumber = 2;
                private bool hasWhere;
                private string where_ = "";
                public bool HasWhere {
                  get { return hasWhere; }
                }
                public string Where {
                  get { return where_; }
                }
                
                public const int SessionFieldNumber = 3;
                private bool hasSession;
                private ulong session_;
                public bool HasSession {
                  get { return hasSession; }
                }
                [global::System.CLSCompliant(false)]
                public ulong Session {
                  get { return session_; }
                }
                
                public override bool IsInitialized {
                  get {
                    return true;
                  }
                }
                
                public override void WriteTo(pb::ICodedOutputStream output) {
                  CalcSerializedSize();
                  string[] field_names = _queryResponseFieldNames;
                  if (hasState) {
                    output.WriteBool(1, field_names[1], State);
                  }
                  if (hasWhere) {
                    output.WriteString(2, field_names[2], Where);
                  }
                  if (hasSession) {
                    output.WriteUInt64(3, field_names[0], Session);
                  }
                  UnknownFields.WriteTo(output);
                }
                
                private int memoizedSerializedSize = -1;
                public override int SerializedSize {
                  get {
                    int size = memoizedSerializedSize;
                    if (size != -1) return size;
                    return CalcSerializedSize();
                  }
                }
                
                private int CalcSerializedSize() {
                  int size = memoizedSerializedSize;
                  if (size != -1) return size;
                  
                  size = 0;
                  if (hasState) {
                    size += pb::CodedOutputStream.ComputeBoolSize(1, State);
                  }
                  if (hasWhere) {
                    size += pb::CodedOutputStream.ComputeStringSize(2, Where);
                  }
                  if (hasSession) {
                    size += pb::CodedOutputStream.ComputeUInt64Size(3, Session);
                  }
                  size += UnknownFields.SerializedSize;
                  memoizedSerializedSize = size;
                  return size;
                }
                public static QueryResponse ParseFrom(pb::ByteString data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static QueryResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static QueryResponse ParseFrom(byte[] data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static QueryResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static QueryResponse ParseFrom(global::System.IO.Stream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static QueryResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                public static QueryResponse ParseDelimitedFrom(global::System.IO.Stream input) {
                  return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
                }
                public static QueryResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
                }
                public static QueryResponse ParseFrom(pb::ICodedInputStream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static QueryResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                private QueryResponse MakeReadOnly() {
                  return this;
                }
                
                public static Builder CreateBuilder() { return new Builder(); }
                public override Builder ToBuilder() { return CreateBuilder(this); }
                public override Builder CreateBuilderForType() { return new Builder(); }
                public static Builder CreateBuilder(QueryResponse prototype) {
                  return new Builder(prototype);
                }
                
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                public sealed partial class Builder : pb::GeneratedBuilder<QueryResponse, Builder> {
                  protected override Builder ThisBuilder {
                    get { return this; }
                  }
                  public Builder() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                  }
                  internal Builder(QueryResponse cloneFrom) {
                    result = cloneFrom;
                    resultIsReadOnly = true;
                  }
                  
                  private bool resultIsReadOnly;
                  private QueryResponse result;
                  
                  private QueryResponse PrepareBuilder() {
                    if (resultIsReadOnly) {
                      QueryResponse original = result;
                      result = new QueryResponse();
                      resultIsReadOnly = false;
                      MergeFrom(original);
                    }
                    return result;
                  }
                  
                  public override bool IsInitialized {
                    get { return result.IsInitialized; }
                  }
                  
                  protected override QueryResponse MessageBeingBuilt {
                    get { return PrepareBuilder(); }
                  }
                  
                  public override Builder Clear() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                    return this;
                  }
                  
                  public override Builder Clone() {
                    if (resultIsReadOnly) {
                      return new Builder(result);
                    } else {
                      return new Builder().MergeFrom(result);
                    }
                  }
                  
                  public override pbd::MessageDescriptor DescriptorForType {
                    get { return global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse.Descriptor; }
                  }
                  
                  public override QueryResponse DefaultInstanceForType {
                    get { return global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse.DefaultInstance; }
                  }
                  
                  public override QueryResponse BuildPartial() {
                    if (resultIsReadOnly) {
                      return result;
                    }
                    resultIsReadOnly = true;
                    return result.MakeReadOnly();
                  }
                  
                  public override Builder MergeFrom(pb::IMessage other) {
                    if (other is QueryResponse) {
                      return MergeFrom((QueryResponse) other);
                    } else {
                      base.MergeFrom(other);
                      return this;
                    }
                  }
                  
                  public override Builder MergeFrom(QueryResponse other) {
                    if (other == global::protos.Internal.Types.Global.Types.OnlineState.Types.QueryResponse.DefaultInstance) return this;
                    PrepareBuilder();
                    if (other.HasState) {
                      State = other.State;
                    }
                    if (other.HasWhere) {
                      Where = other.Where;
                    }
                    if (other.HasSession) {
                      Session = other.Session;
                    }
                    this.MergeUnknownFields(other.UnknownFields);
                    return this;
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input) {
                    return MergeFrom(input, pb::ExtensionRegistry.Empty);
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                    PrepareBuilder();
                    pb::UnknownFieldSet.Builder unknownFields = null;
                    uint tag;
                    string field_name;
                    while (input.ReadTag(out tag, out field_name)) {
                      if(tag == 0 && field_name != null) {
                        int field_ordinal = global::System.Array.BinarySearch(_queryResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if(field_ordinal >= 0)
                          tag = _queryResponseFieldTags[field_ordinal];
                        else {
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          continue;
                        }
                      }
                      switch (tag) {
                        case 0: {
                          throw pb::InvalidProtocolBufferException.InvalidTag();
                        }
                        default: {
                          if (pb::WireFormat.IsEndGroupTag(tag)) {
                            if (unknownFields != null) {
                              this.UnknownFields = unknownFields.Build();
                            }
                            return this;
                          }
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          break;
                        }
                        case 8: {
                          result.hasState = input.ReadBool(ref result.state_);
                          break;
                        }
                        case 18: {
                          result.hasWhere = input.ReadString(ref result.where_);
                          break;
                        }
                        case 24: {
                          result.hasSession = input.ReadUInt64(ref result.session_);
                          break;
                        }
                      }
                    }
                    
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  
                  
                  public bool HasState {
                    get { return result.hasState; }
                  }
                  public bool State {
                    get { return result.State; }
                    set { SetState(value); }
                  }
                  public Builder SetState(bool value) {
                    PrepareBuilder();
                    result.hasState = true;
                    result.state_ = value;
                    return this;
                  }
                  public Builder ClearState() {
                    PrepareBuilder();
                    result.hasState = false;
                    result.state_ = false;
                    return this;
                  }
                  
                  public bool HasWhere {
                    get { return result.hasWhere; }
                  }
                  public string Where {
                    get { return result.Where; }
                    set { SetWhere(value); }
                  }
                  public Builder SetWhere(string value) {
                    pb::ThrowHelper.ThrowIfNull(value, "value");
                    PrepareBuilder();
                    result.hasWhere = true;
                    result.where_ = value;
                    return this;
                  }
                  public Builder ClearWhere() {
                    PrepareBuilder();
                    result.hasWhere = false;
                    result.where_ = "";
                    return this;
                  }
                  
                  public bool HasSession {
                    get { return result.hasSession; }
                  }
                  [global::System.CLSCompliant(false)]
                  public ulong Session {
                    get { return result.Session; }
                    set { SetSession(value); }
                  }
                  [global::System.CLSCompliant(false)]
                  public Builder SetSession(ulong value) {
                    PrepareBuilder();
                    result.hasSession = true;
                    result.session_ = value;
                    return this;
                  }
                  public Builder ClearSession() {
                    PrepareBuilder();
                    result.hasSession = false;
                    result.session_ = 0UL;
                    return this;
                  }
                }
                static QueryResponse() {
                  object.ReferenceEquals(global::protos.Protos.Descriptor, null);
                }
              }
              
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class SetRequest : pb::GeneratedMessage<SetRequest, SetRequest.Builder> {
                private SetRequest() { }
                private static readonly SetRequest defaultInstance = new SetRequest().MakeReadOnly();
                private static readonly string[] _setRequestFieldNames = new string[] { "Account", "State" };
                private static readonly uint[] _setRequestFieldTags = new uint[] { 10, 16 };
                public static SetRequest DefaultInstance {
                  get { return defaultInstance; }
                }
                
                public override SetRequest DefaultInstanceForType {
                  get { return DefaultInstance; }
                }
                
                protected override SetRequest ThisMessage {
                  get { return this; }
                }
                
                public static pbd::MessageDescriptor Descriptor {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState_SetRequest__Descriptor; }
                }
                
                protected override pb::FieldAccess.FieldAccessorTable<SetRequest, SetRequest.Builder> InternalFieldAccessors {
                  get { return global::protos.Protos.internal__static_protos_Internal_Global_OnlineState_SetRequest__FieldAccessorTable; }
                }
                
                public const int AccountFieldNumber = 1;
                private bool hasAccount;
                private string account_ = "";
                public bool HasAccount {
                  get { return hasAccount; }
                }
                public string Account {
                  get { return account_; }
                }
                
                public const int StateFieldNumber = 2;
                private bool hasState;
                private bool state_;
                public bool HasState {
                  get { return hasState; }
                }
                public bool State {
                  get { return state_; }
                }
                
                public override bool IsInitialized {
                  get {
                    return true;
                  }
                }
                
                public override void WriteTo(pb::ICodedOutputStream output) {
                  CalcSerializedSize();
                  string[] field_names = _setRequestFieldNames;
                  if (hasAccount) {
                    output.WriteString(1, field_names[0], Account);
                  }
                  if (hasState) {
                    output.WriteBool(2, field_names[1], State);
                  }
                  UnknownFields.WriteTo(output);
                }
                
                private int memoizedSerializedSize = -1;
                public override int SerializedSize {
                  get {
                    int size = memoizedSerializedSize;
                    if (size != -1) return size;
                    return CalcSerializedSize();
                  }
                }
                
                private int CalcSerializedSize() {
                  int size = memoizedSerializedSize;
                  if (size != -1) return size;
                  
                  size = 0;
                  if (hasAccount) {
                    size += pb::CodedOutputStream.ComputeStringSize(1, Account);
                  }
                  if (hasState) {
                    size += pb::CodedOutputStream.ComputeBoolSize(2, State);
                  }
                  size += UnknownFields.SerializedSize;
                  memoizedSerializedSize = size;
                  return size;
                }
                public static SetRequest ParseFrom(pb::ByteString data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static SetRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static SetRequest ParseFrom(byte[] data) {
                  return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
                }
                public static SetRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
                }
                public static SetRequest ParseFrom(global::System.IO.Stream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static SetRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                public static SetRequest ParseDelimitedFrom(global::System.IO.Stream input) {
                  return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
                }
                public static SetRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
                  return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
                }
                public static SetRequest ParseFrom(pb::ICodedInputStream input) {
                  return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
                }
                public static SetRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                  return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
                }
                private SetRequest MakeReadOnly() {
                  return this;
                }
                
                public static Builder CreateBuilder() { return new Builder(); }
                public override Builder ToBuilder() { return CreateBuilder(this); }
                public override Builder CreateBuilderForType() { return new Builder(); }
                public static Builder CreateBuilder(SetRequest prototype) {
                  return new Builder(prototype);
                }
                
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                public sealed partial class Builder : pb::GeneratedBuilder<SetRequest, Builder> {
                  protected override Builder ThisBuilder {
                    get { return this; }
                  }
                  public Builder() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                  }
                  internal Builder(SetRequest cloneFrom) {
                    result = cloneFrom;
                    resultIsReadOnly = true;
                  }
                  
                  private bool resultIsReadOnly;
                  private SetRequest result;
                  
                  private SetRequest PrepareBuilder() {
                    if (resultIsReadOnly) {
                      SetRequest original = result;
                      result = new SetRequest();
                      resultIsReadOnly = false;
                      MergeFrom(original);
                    }
                    return result;
                  }
                  
                  public override bool IsInitialized {
                    get { return result.IsInitialized; }
                  }
                  
                  protected override SetRequest MessageBeingBuilt {
                    get { return PrepareBuilder(); }
                  }
                  
                  public override Builder Clear() {
                    result = DefaultInstance;
                    resultIsReadOnly = true;
                    return this;
                  }
                  
                  public override Builder Clone() {
                    if (resultIsReadOnly) {
                      return new Builder(result);
                    } else {
                      return new Builder().MergeFrom(result);
                    }
                  }
                  
                  public override pbd::MessageDescriptor DescriptorForType {
                    get { return global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest.Descriptor; }
                  }
                  
                  public override SetRequest DefaultInstanceForType {
                    get { return global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest.DefaultInstance; }
                  }
                  
                  public override SetRequest BuildPartial() {
                    if (resultIsReadOnly) {
                      return result;
                    }
                    resultIsReadOnly = true;
                    return result.MakeReadOnly();
                  }
                  
                  public override Builder MergeFrom(pb::IMessage other) {
                    if (other is SetRequest) {
                      return MergeFrom((SetRequest) other);
                    } else {
                      base.MergeFrom(other);
                      return this;
                    }
                  }
                  
                  public override Builder MergeFrom(SetRequest other) {
                    if (other == global::protos.Internal.Types.Global.Types.OnlineState.Types.SetRequest.DefaultInstance) return this;
                    PrepareBuilder();
                    if (other.HasAccount) {
                      Account = other.Account;
                    }
                    if (other.HasState) {
                      State = other.State;
                    }
                    this.MergeUnknownFields(other.UnknownFields);
                    return this;
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input) {
                    return MergeFrom(input, pb::ExtensionRegistry.Empty);
                  }
                  
                  public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                    PrepareBuilder();
                    pb::UnknownFieldSet.Builder unknownFields = null;
                    uint tag;
                    string field_name;
                    while (input.ReadTag(out tag, out field_name)) {
                      if(tag == 0 && field_name != null) {
                        int field_ordinal = global::System.Array.BinarySearch(_setRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                        if(field_ordinal >= 0)
                          tag = _setRequestFieldTags[field_ordinal];
                        else {
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          continue;
                        }
                      }
                      switch (tag) {
                        case 0: {
                          throw pb::InvalidProtocolBufferException.InvalidTag();
                        }
                        default: {
                          if (pb::WireFormat.IsEndGroupTag(tag)) {
                            if (unknownFields != null) {
                              this.UnknownFields = unknownFields.Build();
                            }
                            return this;
                          }
                          if (unknownFields == null) {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                          }
                          ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                          break;
                        }
                        case 10: {
                          result.hasAccount = input.ReadString(ref result.account_);
                          break;
                        }
                        case 16: {
                          result.hasState = input.ReadBool(ref result.state_);
                          break;
                        }
                      }
                    }
                    
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  
                  
                  public bool HasAccount {
                    get { return result.hasAccount; }
                  }
                  public string Account {
                    get { return result.Account; }
                    set { SetAccount(value); }
                  }
                  public Builder SetAccount(string value) {
                    pb::ThrowHelper.ThrowIfNull(value, "value");
                    PrepareBuilder();
                    result.hasAccount = true;
                    result.account_ = value;
                    return this;
                  }
                  public Builder ClearAccount() {
                    PrepareBuilder();
                    result.hasAccount = false;
                    result.account_ = "";
                    return this;
                  }
                  
                  public bool HasState {
                    get { return result.hasState; }
                  }
                  public bool State {
                    get { return result.State; }
                    set { SetState(value); }
                  }
                  public Builder SetState(bool value) {
                    PrepareBuilder();
                    result.hasState = true;
                    result.state_ = value;
                    return this;
                  }
                  public Builder ClearState() {
                    PrepareBuilder();
                    result.hasState = false;
                    result.state_ = false;
                    return this;
                  }
                }
                static SetRequest() {
                  object.ReferenceEquals(global::protos.Protos.Descriptor, null);
                }
              }
              
            }
            #endregion
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _onlineStateFieldNames;
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static OnlineState ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static OnlineState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static OnlineState ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static OnlineState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static OnlineState ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static OnlineState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static OnlineState ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static OnlineState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static OnlineState ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static OnlineState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private OnlineState MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(OnlineState prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<OnlineState, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(OnlineState cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private OnlineState result;
              
              private OnlineState PrepareBuilder() {
                if (resultIsReadOnly) {
                  OnlineState original = result;
                  result = new OnlineState();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override OnlineState MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Global.Types.OnlineState.Descriptor; }
              }
              
              public override OnlineState DefaultInstanceForType {
                get { return global::protos.Internal.Types.Global.Types.OnlineState.DefaultInstance; }
              }
              
              public override OnlineState BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is OnlineState) {
                  return MergeFrom((OnlineState) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(OnlineState other) {
                if (other == global::protos.Internal.Types.Global.Types.OnlineState.DefaultInstance) return this;
                PrepareBuilder();
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_onlineStateFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _onlineStateFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
            }
            static OnlineState() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
            private Response() { }
            private static readonly Response defaultInstance = new Response().MakeReadOnly();
            private static readonly string[] _responseFieldNames = new string[] { "Success" };
            private static readonly uint[] _responseFieldTags = new uint[] { 8 };
            public static Response DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override Response DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override Response ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Global_Response__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Global_Response__FieldAccessorTable; }
            }
            
            public const int SuccessFieldNumber = 1;
            private bool hasSuccess;
            private bool success_;
            public bool HasSuccess {
              get { return hasSuccess; }
            }
            public bool Success {
              get { return success_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _responseFieldNames;
              if (hasSuccess) {
                output.WriteBool(1, field_names[0], Success);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasSuccess) {
                size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static Response ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static Response ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static Response ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static Response ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private Response MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(Response prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(Response cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private Response result;
              
              private Response PrepareBuilder() {
                if (resultIsReadOnly) {
                  Response original = result;
                  result = new Response();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override Response MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Global.Types.Response.Descriptor; }
              }
              
              public override Response DefaultInstanceForType {
                get { return global::protos.Internal.Types.Global.Types.Response.DefaultInstance; }
              }
              
              public override Response BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is Response) {
                  return MergeFrom((Response) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(Response other) {
                if (other == global::protos.Internal.Types.Global.Types.Response.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasSuccess) {
                  Success = other.Success;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _responseFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 8: {
                      result.hasSuccess = input.ReadBool(ref result.success_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasSuccess {
                get { return result.hasSuccess; }
              }
              public bool Success {
                get { return result.Success; }
                set { SetSuccess(value); }
              }
              public Builder SetSuccess(bool value) {
                PrepareBuilder();
                result.hasSuccess = true;
                result.success_ = value;
                return this;
              }
              public Builder ClearSuccess() {
                PrepareBuilder();
                result.hasSuccess = false;
                result.success_ = false;
                return this;
              }
            }
            static Response() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
        }
        #endregion
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _globalFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Global ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Global ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Global ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Global ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Global ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Global ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Global ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Global ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Global ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Global ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Global MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Global prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Global, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Global cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Global result;
          
          private Global PrepareBuilder() {
            if (resultIsReadOnly) {
              Global original = result;
              result = new Global();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Global MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Internal.Types.Global.Descriptor; }
          }
          
          public override Global DefaultInstanceForType {
            get { return global::protos.Internal.Types.Global.DefaultInstance; }
          }
          
          public override Global BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Global) {
              return MergeFrom((Global) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Global other) {
            if (other == global::protos.Internal.Types.Global.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_globalFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _globalFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static Global() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class GameGate : pb::GeneratedMessage<GameGate, GameGate.Builder> {
        private GameGate() { }
        private static readonly GameGate defaultInstance = new GameGate().MakeReadOnly();
        private static readonly string[] _gameGateFieldNames = new string[] {  };
        private static readonly uint[] _gameGateFieldTags = new uint[] {  };
        public static GameGate DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override GameGate DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override GameGate ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Internal_GameGate__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<GameGate, GameGate.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Internal_GameGate__FieldAccessorTable; }
        }
        
        #region Nested types
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class EntryDataRequest : pb::GeneratedMessage<EntryDataRequest, EntryDataRequest.Builder> {
            private EntryDataRequest() { }
            private static readonly EntryDataRequest defaultInstance = new EntryDataRequest().MakeReadOnly();
            private static readonly string[] _entryDataRequestFieldNames = new string[] { "Data" };
            private static readonly uint[] _entryDataRequestFieldTags = new uint[] { 10 };
            public static EntryDataRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override EntryDataRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override EntryDataRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_GameGate_EntryDataRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<EntryDataRequest, EntryDataRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_GameGate_EntryDataRequest__FieldAccessorTable; }
            }
            
            public const int DataFieldNumber = 1;
            private bool hasData;
            private pb::ByteString data_ = pb::ByteString.Empty;
            public bool HasData {
              get { return hasData; }
            }
            public pb::ByteString Data {
              get { return data_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _entryDataRequestFieldNames;
              if (hasData) {
                output.WriteBytes(1, field_names[0], Data);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasData) {
                size += pb::CodedOutputStream.ComputeBytesSize(1, Data);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static EntryDataRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static EntryDataRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static EntryDataRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static EntryDataRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private EntryDataRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(EntryDataRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<EntryDataRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(EntryDataRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private EntryDataRequest result;
              
              private EntryDataRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  EntryDataRequest original = result;
                  result = new EntryDataRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override EntryDataRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.GameGate.Types.EntryDataRequest.Descriptor; }
              }
              
              public override EntryDataRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.GameGate.Types.EntryDataRequest.DefaultInstance; }
              }
              
              public override EntryDataRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is EntryDataRequest) {
                  return MergeFrom((EntryDataRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(EntryDataRequest other) {
                if (other == global::protos.Internal.Types.GameGate.Types.EntryDataRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasData) {
                  Data = other.Data;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_entryDataRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _entryDataRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 10: {
                      result.hasData = input.ReadBytes(ref result.data_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasData {
                get { return result.hasData; }
              }
              public pb::ByteString Data {
                get { return result.Data; }
                set { SetData(value); }
              }
              public Builder SetData(pb::ByteString value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasData = true;
                result.data_ = value;
                return this;
              }
              public Builder ClearData() {
                PrepareBuilder();
                result.hasData = false;
                result.data_ = pb::ByteString.Empty;
                return this;
              }
            }
            static EntryDataRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class PassThroughRequest : pb::GeneratedMessage<PassThroughRequest, PassThroughRequest.Builder> {
            private PassThroughRequest() { }
            private static readonly PassThroughRequest defaultInstance = new PassThroughRequest().MakeReadOnly();
            private static readonly string[] _passThroughRequestFieldNames = new string[] { "Data" };
            private static readonly uint[] _passThroughRequestFieldTags = new uint[] { 10 };
            public static PassThroughRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override PassThroughRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override PassThroughRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_GameGate_PassThroughRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<PassThroughRequest, PassThroughRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_GameGate_PassThroughRequest__FieldAccessorTable; }
            }
            
            public const int DataFieldNumber = 1;
            private bool hasData;
            private pb::ByteString data_ = pb::ByteString.Empty;
            public bool HasData {
              get { return hasData; }
            }
            public pb::ByteString Data {
              get { return data_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _passThroughRequestFieldNames;
              if (hasData) {
                output.WriteBytes(1, field_names[0], Data);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasData) {
                size += pb::CodedOutputStream.ComputeBytesSize(1, Data);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static PassThroughRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static PassThroughRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static PassThroughRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static PassThroughRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private PassThroughRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(PassThroughRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<PassThroughRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(PassThroughRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private PassThroughRequest result;
              
              private PassThroughRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  PassThroughRequest original = result;
                  result = new PassThroughRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override PassThroughRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.GameGate.Types.PassThroughRequest.Descriptor; }
              }
              
              public override PassThroughRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.GameGate.Types.PassThroughRequest.DefaultInstance; }
              }
              
              public override PassThroughRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is PassThroughRequest) {
                  return MergeFrom((PassThroughRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(PassThroughRequest other) {
                if (other == global::protos.Internal.Types.GameGate.Types.PassThroughRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasData) {
                  Data = other.Data;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_passThroughRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _passThroughRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 10: {
                      result.hasData = input.ReadBytes(ref result.data_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasData {
                get { return result.hasData; }
              }
              public pb::ByteString Data {
                get { return result.Data; }
                set { SetData(value); }
              }
              public Builder SetData(pb::ByteString value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasData = true;
                result.data_ = value;
                return this;
              }
              public Builder ClearData() {
                PrepareBuilder();
                result.hasData = false;
                result.data_ = pb::ByteString.Empty;
                return this;
              }
            }
            static PassThroughRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class KickRequest : pb::GeneratedMessage<KickRequest, KickRequest.Builder> {
            private KickRequest() { }
            private static readonly KickRequest defaultInstance = new KickRequest().MakeReadOnly();
            private static readonly string[] _kickRequestFieldNames = new string[] { "Session" };
            private static readonly uint[] _kickRequestFieldTags = new uint[] { 8 };
            public static KickRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override KickRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override KickRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_GameGate_KickRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<KickRequest, KickRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_GameGate_KickRequest__FieldAccessorTable; }
            }
            
            public const int SessionFieldNumber = 1;
            private bool hasSession;
            private ulong session_;
            public bool HasSession {
              get { return hasSession; }
            }
            [global::System.CLSCompliant(false)]
            public ulong Session {
              get { return session_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _kickRequestFieldNames;
              if (hasSession) {
                output.WriteUInt64(1, field_names[0], Session);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasSession) {
                size += pb::CodedOutputStream.ComputeUInt64Size(1, Session);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static KickRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static KickRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static KickRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static KickRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static KickRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static KickRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static KickRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static KickRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static KickRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static KickRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private KickRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(KickRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<KickRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(KickRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private KickRequest result;
              
              private KickRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  KickRequest original = result;
                  result = new KickRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override KickRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.GameGate.Types.KickRequest.Descriptor; }
              }
              
              public override KickRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.GameGate.Types.KickRequest.DefaultInstance; }
              }
              
              public override KickRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is KickRequest) {
                  return MergeFrom((KickRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(KickRequest other) {
                if (other == global::protos.Internal.Types.GameGate.Types.KickRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasSession) {
                  Session = other.Session;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_kickRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _kickRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 8: {
                      result.hasSession = input.ReadUInt64(ref result.session_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasSession {
                get { return result.hasSession; }
              }
              [global::System.CLSCompliant(false)]
              public ulong Session {
                get { return result.Session; }
                set { SetSession(value); }
              }
              [global::System.CLSCompliant(false)]
              public Builder SetSession(ulong value) {
                PrepareBuilder();
                result.hasSession = true;
                result.session_ = value;
                return this;
              }
              public Builder ClearSession() {
                PrepareBuilder();
                result.hasSession = false;
                result.session_ = 0UL;
                return this;
              }
            }
            static KickRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
        }
        #endregion
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _gameGateFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static GameGate ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GameGate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GameGate ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static GameGate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static GameGate ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GameGate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static GameGate ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static GameGate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static GameGate ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static GameGate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private GameGate MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(GameGate prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<GameGate, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(GameGate cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private GameGate result;
          
          private GameGate PrepareBuilder() {
            if (resultIsReadOnly) {
              GameGate original = result;
              result = new GameGate();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override GameGate MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Internal.Types.GameGate.Descriptor; }
          }
          
          public override GameGate DefaultInstanceForType {
            get { return global::protos.Internal.Types.GameGate.DefaultInstance; }
          }
          
          public override GameGate BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is GameGate) {
              return MergeFrom((GameGate) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(GameGate other) {
            if (other == global::protos.Internal.Types.GameGate.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_gameGateFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _gameGateFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static GameGate() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Hall : pb::GeneratedMessage<Hall, Hall.Builder> {
        private Hall() { }
        private static readonly Hall defaultInstance = new Hall().MakeReadOnly();
        private static readonly string[] _hallFieldNames = new string[] {  };
        private static readonly uint[] _hallFieldTags = new uint[] {  };
        public static Hall DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Hall DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Hall ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Internal_Hall__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Hall, Hall.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Internal_Hall__FieldAccessorTable; }
        }
        
        #region Nested types
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class EnterRequest : pb::GeneratedMessage<EnterRequest, EnterRequest.Builder> {
            private EnterRequest() { }
            private static readonly EnterRequest defaultInstance = new EnterRequest().MakeReadOnly();
            private static readonly string[] _enterRequestFieldNames = new string[] { "Account" };
            private static readonly uint[] _enterRequestFieldTags = new uint[] { 10 };
            public static EnterRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override EnterRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override EnterRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_EnterRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<EnterRequest, EnterRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_EnterRequest__FieldAccessorTable; }
            }
            
            public const int AccountFieldNumber = 1;
            private bool hasAccount;
            private string account_ = "";
            public bool HasAccount {
              get { return hasAccount; }
            }
            public string Account {
              get { return account_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _enterRequestFieldNames;
              if (hasAccount) {
                output.WriteString(1, field_names[0], Account);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasAccount) {
                size += pb::CodedOutputStream.ComputeStringSize(1, Account);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static EnterRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static EnterRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static EnterRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static EnterRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static EnterRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static EnterRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static EnterRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static EnterRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static EnterRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static EnterRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private EnterRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(EnterRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<EnterRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(EnterRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private EnterRequest result;
              
              private EnterRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  EnterRequest original = result;
                  result = new EnterRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override EnterRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Hall.Types.EnterRequest.Descriptor; }
              }
              
              public override EnterRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.Hall.Types.EnterRequest.DefaultInstance; }
              }
              
              public override EnterRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is EnterRequest) {
                  return MergeFrom((EnterRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(EnterRequest other) {
                if (other == global::protos.Internal.Types.Hall.Types.EnterRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasAccount) {
                  Account = other.Account;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_enterRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _enterRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 10: {
                      result.hasAccount = input.ReadString(ref result.account_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasAccount {
                get { return result.hasAccount; }
              }
              public string Account {
                get { return result.Account; }
                set { SetAccount(value); }
              }
              public Builder SetAccount(string value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasAccount = true;
                result.account_ = value;
                return this;
              }
              public Builder ClearAccount() {
                PrepareBuilder();
                result.hasAccount = false;
                result.account_ = "";
                return this;
              }
            }
            static EnterRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class LeaveResponse : pb::GeneratedMessage<LeaveResponse, LeaveResponse.Builder> {
            private LeaveResponse() { }
            private static readonly LeaveResponse defaultInstance = new LeaveResponse().MakeReadOnly();
            private static readonly string[] _leaveResponseFieldNames = new string[] { "Success" };
            private static readonly uint[] _leaveResponseFieldTags = new uint[] { 8 };
            public static LeaveResponse DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override LeaveResponse DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override LeaveResponse ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_LeaveResponse__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<LeaveResponse, LeaveResponse.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_LeaveResponse__FieldAccessorTable; }
            }
            
            public const int SuccessFieldNumber = 1;
            private bool hasSuccess;
            private bool success_;
            public bool HasSuccess {
              get { return hasSuccess; }
            }
            public bool Success {
              get { return success_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _leaveResponseFieldNames;
              if (hasSuccess) {
                output.WriteBool(1, field_names[0], Success);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasSuccess) {
                size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static LeaveResponse ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static LeaveResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static LeaveResponse ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static LeaveResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static LeaveResponse ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static LeaveResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static LeaveResponse ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static LeaveResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static LeaveResponse ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static LeaveResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private LeaveResponse MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(LeaveResponse prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<LeaveResponse, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(LeaveResponse cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private LeaveResponse result;
              
              private LeaveResponse PrepareBuilder() {
                if (resultIsReadOnly) {
                  LeaveResponse original = result;
                  result = new LeaveResponse();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override LeaveResponse MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Hall.Types.LeaveResponse.Descriptor; }
              }
              
              public override LeaveResponse DefaultInstanceForType {
                get { return global::protos.Internal.Types.Hall.Types.LeaveResponse.DefaultInstance; }
              }
              
              public override LeaveResponse BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is LeaveResponse) {
                  return MergeFrom((LeaveResponse) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(LeaveResponse other) {
                if (other == global::protos.Internal.Types.Hall.Types.LeaveResponse.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasSuccess) {
                  Success = other.Success;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_leaveResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _leaveResponseFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 8: {
                      result.hasSuccess = input.ReadBool(ref result.success_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasSuccess {
                get { return result.hasSuccess; }
              }
              public bool Success {
                get { return result.Success; }
                set { SetSuccess(value); }
              }
              public Builder SetSuccess(bool value) {
                PrepareBuilder();
                result.hasSuccess = true;
                result.success_ = value;
                return this;
              }
              public Builder ClearSuccess() {
                PrepareBuilder();
                result.hasSuccess = false;
                result.success_ = false;
                return this;
              }
            }
            static LeaveResponse() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class CreateRoomRequest : pb::GeneratedMessage<CreateRoomRequest, CreateRoomRequest.Builder> {
            private CreateRoomRequest() { }
            private static readonly CreateRoomRequest defaultInstance = new CreateRoomRequest().MakeReadOnly();
            private static readonly string[] _createRoomRequestFieldNames = new string[] { "Option" };
            private static readonly uint[] _createRoomRequestFieldTags = new uint[] { 10 };
            public static CreateRoomRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override CreateRoomRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override CreateRoomRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_CreateRoomRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<CreateRoomRequest, CreateRoomRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_CreateRoomRequest__FieldAccessorTable; }
            }
            
            public const int OptionFieldNumber = 1;
            private bool hasOption;
            private global::protos.Common.Types.RoomOption option_;
            public bool HasOption {
              get { return hasOption; }
            }
            public global::protos.Common.Types.RoomOption Option {
              get { return option_ ?? global::protos.Common.Types.RoomOption.DefaultInstance; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _createRoomRequestFieldNames;
              if (hasOption) {
                output.WriteMessage(1, field_names[0], Option);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasOption) {
                size += pb::CodedOutputStream.ComputeMessageSize(1, Option);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static CreateRoomRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static CreateRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static CreateRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static CreateRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private CreateRoomRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(CreateRoomRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<CreateRoomRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(CreateRoomRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private CreateRoomRequest result;
              
              private CreateRoomRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  CreateRoomRequest original = result;
                  result = new CreateRoomRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override CreateRoomRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Hall.Types.CreateRoomRequest.Descriptor; }
              }
              
              public override CreateRoomRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.Hall.Types.CreateRoomRequest.DefaultInstance; }
              }
              
              public override CreateRoomRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is CreateRoomRequest) {
                  return MergeFrom((CreateRoomRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(CreateRoomRequest other) {
                if (other == global::protos.Internal.Types.Hall.Types.CreateRoomRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasOption) {
                  MergeOption(other.Option);
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_createRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _createRoomRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 10: {
                      global::protos.Common.Types.RoomOption.Builder subBuilder = global::protos.Common.Types.RoomOption.CreateBuilder();
                      if (result.hasOption) {
                        subBuilder.MergeFrom(Option);
                      }
                      input.ReadMessage(subBuilder, extensionRegistry);
                      Option = subBuilder.BuildPartial();
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasOption {
               get { return result.hasOption; }
              }
              public global::protos.Common.Types.RoomOption Option {
                get { return result.Option; }
                set { SetOption(value); }
              }
              public Builder SetOption(global::protos.Common.Types.RoomOption value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasOption = true;
                result.option_ = value;
                return this;
              }
              public Builder SetOption(global::protos.Common.Types.RoomOption.Builder builderForValue) {
                pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
                PrepareBuilder();
                result.hasOption = true;
                result.option_ = builderForValue.Build();
                return this;
              }
              public Builder MergeOption(global::protos.Common.Types.RoomOption value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                if (result.hasOption &&
                    result.option_ != global::protos.Common.Types.RoomOption.DefaultInstance) {
                    result.option_ = global::protos.Common.Types.RoomOption.CreateBuilder(result.option_).MergeFrom(value).BuildPartial();
                } else {
                  result.option_ = value;
                }
                result.hasOption = true;
                return this;
              }
              public Builder ClearOption() {
                PrepareBuilder();
                result.hasOption = false;
                result.option_ = null;
                return this;
              }
            }
            static CreateRoomRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class EnterRoomRequest : pb::GeneratedMessage<EnterRoomRequest, EnterRoomRequest.Builder> {
            private EnterRoomRequest() { }
            private static readonly EnterRoomRequest defaultInstance = new EnterRoomRequest().MakeReadOnly();
            private static readonly string[] _enterRoomRequestFieldNames = new string[] { "Id", "Password" };
            private static readonly uint[] _enterRoomRequestFieldTags = new uint[] { 8, 18 };
            public static EnterRoomRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override EnterRoomRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override EnterRoomRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_EnterRoomRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<EnterRoomRequest, EnterRoomRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Hall_EnterRoomRequest__FieldAccessorTable; }
            }
            
            public const int IdFieldNumber = 1;
            private bool hasId;
            private ulong id_;
            public bool HasId {
              get { return hasId; }
            }
            [global::System.CLSCompliant(false)]
            public ulong Id {
              get { return id_; }
            }
            
            public const int PasswordFieldNumber = 2;
            private bool hasPassword;
            private string password_ = "";
            public bool HasPassword {
              get { return hasPassword; }
            }
            public string Password {
              get { return password_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _enterRoomRequestFieldNames;
              if (hasId) {
                output.WriteUInt64(1, field_names[0], Id);
              }
              if (hasPassword) {
                output.WriteString(2, field_names[1], Password);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasId) {
                size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
              }
              if (hasPassword) {
                size += pb::CodedOutputStream.ComputeStringSize(2, Password);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static EnterRoomRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static EnterRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static EnterRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static EnterRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private EnterRoomRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(EnterRoomRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<EnterRoomRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(EnterRoomRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private EnterRoomRequest result;
              
              private EnterRoomRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  EnterRoomRequest original = result;
                  result = new EnterRoomRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override EnterRoomRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Hall.Types.EnterRoomRequest.Descriptor; }
              }
              
              public override EnterRoomRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.Hall.Types.EnterRoomRequest.DefaultInstance; }
              }
              
              public override EnterRoomRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is EnterRoomRequest) {
                  return MergeFrom((EnterRoomRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(EnterRoomRequest other) {
                if (other == global::protos.Internal.Types.Hall.Types.EnterRoomRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasId) {
                  Id = other.Id;
                }
                if (other.HasPassword) {
                  Password = other.Password;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_enterRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _enterRoomRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 8: {
                      result.hasId = input.ReadUInt64(ref result.id_);
                      break;
                    }
                    case 18: {
                      result.hasPassword = input.ReadString(ref result.password_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasId {
                get { return result.hasId; }
              }
              [global::System.CLSCompliant(false)]
              public ulong Id {
                get { return result.Id; }
                set { SetId(value); }
              }
              [global::System.CLSCompliant(false)]
              public Builder SetId(ulong value) {
                PrepareBuilder();
                result.hasId = true;
                result.id_ = value;
                return this;
              }
              public Builder ClearId() {
                PrepareBuilder();
                result.hasId = false;
                result.id_ = 0UL;
                return this;
              }
              
              public bool HasPassword {
                get { return result.hasPassword; }
              }
              public string Password {
                get { return result.Password; }
                set { SetPassword(value); }
              }
              public Builder SetPassword(string value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasPassword = true;
                result.password_ = value;
                return this;
              }
              public Builder ClearPassword() {
                PrepareBuilder();
                result.hasPassword = false;
                result.password_ = "";
                return this;
              }
            }
            static EnterRoomRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
        }
        #endregion
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _hallFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Hall ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Hall ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Hall ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Hall ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Hall ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Hall ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Hall ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Hall ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Hall ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Hall ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Hall MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Hall prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Hall, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Hall cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Hall result;
          
          private Hall PrepareBuilder() {
            if (resultIsReadOnly) {
              Hall original = result;
              result = new Hall();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Hall MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Internal.Types.Hall.Descriptor; }
          }
          
          public override Hall DefaultInstanceForType {
            get { return global::protos.Internal.Types.Hall.DefaultInstance; }
          }
          
          public override Hall BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Hall) {
              return MergeFrom((Hall) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Hall other) {
            if (other == global::protos.Internal.Types.Hall.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_hallFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _hallFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static Hall() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Duel : pb::GeneratedMessage<Duel, Duel.Builder> {
        private Duel() { }
        private static readonly Duel defaultInstance = new Duel().MakeReadOnly();
        private static readonly string[] _duelFieldNames = new string[] {  };
        private static readonly uint[] _duelFieldTags = new uint[] {  };
        public static Duel DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Duel DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Duel ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Internal_Duel__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Duel, Duel.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Internal_Duel__FieldAccessorTable; }
        }
        
        #region Nested types
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class DataTransfer : pb::GeneratedMessage<DataTransfer, DataTransfer.Builder> {
            private DataTransfer() { }
            private static readonly DataTransfer defaultInstance = new DataTransfer().MakeReadOnly();
            private static readonly string[] _dataTransferFieldNames = new string[] { "Data" };
            private static readonly uint[] _dataTransferFieldTags = new uint[] { 10 };
            public static DataTransfer DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override DataTransfer DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override DataTransfer ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Duel_DataTransfer__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<DataTransfer, DataTransfer.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Duel_DataTransfer__FieldAccessorTable; }
            }
            
            public const int DataFieldNumber = 1;
            private bool hasData;
            private pb::ByteString data_ = pb::ByteString.Empty;
            public bool HasData {
              get { return hasData; }
            }
            public pb::ByteString Data {
              get { return data_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _dataTransferFieldNames;
              if (hasData) {
                output.WriteBytes(1, field_names[0], Data);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasData) {
                size += pb::CodedOutputStream.ComputeBytesSize(1, Data);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static DataTransfer ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static DataTransfer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static DataTransfer ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static DataTransfer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static DataTransfer ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static DataTransfer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static DataTransfer ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static DataTransfer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static DataTransfer ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static DataTransfer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private DataTransfer MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(DataTransfer prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<DataTransfer, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(DataTransfer cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private DataTransfer result;
              
              private DataTransfer PrepareBuilder() {
                if (resultIsReadOnly) {
                  DataTransfer original = result;
                  result = new DataTransfer();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override DataTransfer MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Duel.Types.DataTransfer.Descriptor; }
              }
              
              public override DataTransfer DefaultInstanceForType {
                get { return global::protos.Internal.Types.Duel.Types.DataTransfer.DefaultInstance; }
              }
              
              public override DataTransfer BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is DataTransfer) {
                  return MergeFrom((DataTransfer) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(DataTransfer other) {
                if (other == global::protos.Internal.Types.Duel.Types.DataTransfer.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasData) {
                  Data = other.Data;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_dataTransferFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _dataTransferFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 10: {
                      result.hasData = input.ReadBytes(ref result.data_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasData {
                get { return result.hasData; }
              }
              public pb::ByteString Data {
                get { return result.Data; }
                set { SetData(value); }
              }
              public Builder SetData(pb::ByteString value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasData = true;
                result.data_ = value;
                return this;
              }
              public Builder ClearData() {
                PrepareBuilder();
                result.hasData = false;
                result.data_ = pb::ByteString.Empty;
                return this;
              }
            }
            static DataTransfer() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
        }
        #endregion
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _duelFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Duel ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Duel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Duel ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Duel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Duel ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Duel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Duel ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Duel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Duel ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Duel ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Duel MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Duel prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Duel, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Duel cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Duel result;
          
          private Duel PrepareBuilder() {
            if (resultIsReadOnly) {
              Duel original = result;
              result = new Duel();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Duel MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Internal.Types.Duel.Descriptor; }
          }
          
          public override Duel DefaultInstanceForType {
            get { return global::protos.Internal.Types.Duel.DefaultInstance; }
          }
          
          public override Duel BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Duel) {
              return MergeFrom((Duel) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Duel other) {
            if (other == global::protos.Internal.Types.Duel.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_duelFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _duelFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static Duel() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Chat : pb::GeneratedMessage<Chat, Chat.Builder> {
        private Chat() { }
        private static readonly Chat defaultInstance = new Chat().MakeReadOnly();
        private static readonly string[] _chatFieldNames = new string[] {  };
        private static readonly uint[] _chatFieldTags = new uint[] {  };
        public static Chat DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Chat DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Chat ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::protos.Protos.internal__static_protos_Internal_Chat__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Chat, Chat.Builder> InternalFieldAccessors {
          get { return global::protos.Protos.internal__static_protos_Internal_Chat__FieldAccessorTable; }
        }
        
        #region Nested types
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class HallRequest : pb::GeneratedMessage<HallRequest, HallRequest.Builder> {
            private HallRequest() { }
            private static readonly HallRequest defaultInstance = new HallRequest().MakeReadOnly();
            private static readonly string[] _hallRequestFieldNames = new string[] { "Account", "Content" };
            private static readonly uint[] _hallRequestFieldTags = new uint[] { 10, 18 };
            public static HallRequest DefaultInstance {
              get { return defaultInstance; }
            }
            
            public override HallRequest DefaultInstanceForType {
              get { return DefaultInstance; }
            }
            
            protected override HallRequest ThisMessage {
              get { return this; }
            }
            
            public static pbd::MessageDescriptor Descriptor {
              get { return global::protos.Protos.internal__static_protos_Internal_Chat_HallRequest__Descriptor; }
            }
            
            protected override pb::FieldAccess.FieldAccessorTable<HallRequest, HallRequest.Builder> InternalFieldAccessors {
              get { return global::protos.Protos.internal__static_protos_Internal_Chat_HallRequest__FieldAccessorTable; }
            }
            
            public const int AccountFieldNumber = 1;
            private bool hasAccount;
            private string account_ = "";
            public bool HasAccount {
              get { return hasAccount; }
            }
            public string Account {
              get { return account_; }
            }
            
            public const int ContentFieldNumber = 2;
            private bool hasContent;
            private string content_ = "";
            public bool HasContent {
              get { return hasContent; }
            }
            public string Content {
              get { return content_; }
            }
            
            public override bool IsInitialized {
              get {
                return true;
              }
            }
            
            public override void WriteTo(pb::ICodedOutputStream output) {
              CalcSerializedSize();
              string[] field_names = _hallRequestFieldNames;
              if (hasAccount) {
                output.WriteString(1, field_names[0], Account);
              }
              if (hasContent) {
                output.WriteString(2, field_names[1], Content);
              }
              UnknownFields.WriteTo(output);
            }
            
            private int memoizedSerializedSize = -1;
            public override int SerializedSize {
              get {
                int size = memoizedSerializedSize;
                if (size != -1) return size;
                return CalcSerializedSize();
              }
            }
            
            private int CalcSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;
              
              size = 0;
              if (hasAccount) {
                size += pb::CodedOutputStream.ComputeStringSize(1, Account);
              }
              if (hasContent) {
                size += pb::CodedOutputStream.ComputeStringSize(2, Content);
              }
              size += UnknownFields.SerializedSize;
              memoizedSerializedSize = size;
              return size;
            }
            public static HallRequest ParseFrom(pb::ByteString data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static HallRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static HallRequest ParseFrom(byte[] data) {
              return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
            }
            public static HallRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
            }
            public static HallRequest ParseFrom(global::System.IO.Stream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static HallRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            public static HallRequest ParseDelimitedFrom(global::System.IO.Stream input) {
              return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
            }
            public static HallRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
              return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
            }
            public static HallRequest ParseFrom(pb::ICodedInputStream input) {
              return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
            }
            public static HallRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
              return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
            }
            private HallRequest MakeReadOnly() {
              return this;
            }
            
            public static Builder CreateBuilder() { return new Builder(); }
            public override Builder ToBuilder() { return CreateBuilder(this); }
            public override Builder CreateBuilderForType() { return new Builder(); }
            public static Builder CreateBuilder(HallRequest prototype) {
              return new Builder(prototype);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed partial class Builder : pb::GeneratedBuilder<HallRequest, Builder> {
              protected override Builder ThisBuilder {
                get { return this; }
              }
              public Builder() {
                result = DefaultInstance;
                resultIsReadOnly = true;
              }
              internal Builder(HallRequest cloneFrom) {
                result = cloneFrom;
                resultIsReadOnly = true;
              }
              
              private bool resultIsReadOnly;
              private HallRequest result;
              
              private HallRequest PrepareBuilder() {
                if (resultIsReadOnly) {
                  HallRequest original = result;
                  result = new HallRequest();
                  resultIsReadOnly = false;
                  MergeFrom(original);
                }
                return result;
              }
              
              public override bool IsInitialized {
                get { return result.IsInitialized; }
              }
              
              protected override HallRequest MessageBeingBuilt {
                get { return PrepareBuilder(); }
              }
              
              public override Builder Clear() {
                result = DefaultInstance;
                resultIsReadOnly = true;
                return this;
              }
              
              public override Builder Clone() {
                if (resultIsReadOnly) {
                  return new Builder(result);
                } else {
                  return new Builder().MergeFrom(result);
                }
              }
              
              public override pbd::MessageDescriptor DescriptorForType {
                get { return global::protos.Internal.Types.Chat.Types.HallRequest.Descriptor; }
              }
              
              public override HallRequest DefaultInstanceForType {
                get { return global::protos.Internal.Types.Chat.Types.HallRequest.DefaultInstance; }
              }
              
              public override HallRequest BuildPartial() {
                if (resultIsReadOnly) {
                  return result;
                }
                resultIsReadOnly = true;
                return result.MakeReadOnly();
              }
              
              public override Builder MergeFrom(pb::IMessage other) {
                if (other is HallRequest) {
                  return MergeFrom((HallRequest) other);
                } else {
                  base.MergeFrom(other);
                  return this;
                }
              }
              
              public override Builder MergeFrom(HallRequest other) {
                if (other == global::protos.Internal.Types.Chat.Types.HallRequest.DefaultInstance) return this;
                PrepareBuilder();
                if (other.HasAccount) {
                  Account = other.Account;
                }
                if (other.HasContent) {
                  Content = other.Content;
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input) {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
              }
              
              public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
                PrepareBuilder();
                pb::UnknownFieldSet.Builder unknownFields = null;
                uint tag;
                string field_name;
                while (input.ReadTag(out tag, out field_name)) {
                  if(tag == 0 && field_name != null) {
                    int field_ordinal = global::System.Array.BinarySearch(_hallRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if(field_ordinal >= 0)
                      tag = _hallRequestFieldTags[field_ordinal];
                    else {
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      continue;
                    }
                  }
                  switch (tag) {
                    case 0: {
                      throw pb::InvalidProtocolBufferException.InvalidTag();
                    }
                    default: {
                      if (pb::WireFormat.IsEndGroupTag(tag)) {
                        if (unknownFields != null) {
                          this.UnknownFields = unknownFields.Build();
                        }
                        return this;
                      }
                      if (unknownFields == null) {
                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                      }
                      ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                      break;
                    }
                    case 10: {
                      result.hasAccount = input.ReadString(ref result.account_);
                      break;
                    }
                    case 18: {
                      result.hasContent = input.ReadString(ref result.content_);
                      break;
                    }
                  }
                }
                
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              
              
              public bool HasAccount {
                get { return result.hasAccount; }
              }
              public string Account {
                get { return result.Account; }
                set { SetAccount(value); }
              }
              public Builder SetAccount(string value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasAccount = true;
                result.account_ = value;
                return this;
              }
              public Builder ClearAccount() {
                PrepareBuilder();
                result.hasAccount = false;
                result.account_ = "";
                return this;
              }
              
              public bool HasContent {
                get { return result.hasContent; }
              }
              public string Content {
                get { return result.Content; }
                set { SetContent(value); }
              }
              public Builder SetContent(string value) {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                PrepareBuilder();
                result.hasContent = true;
                result.content_ = value;
                return this;
              }
              public Builder ClearContent() {
                PrepareBuilder();
                result.hasContent = false;
                result.content_ = "";
                return this;
              }
            }
            static HallRequest() {
              object.ReferenceEquals(global::protos.Protos.Descriptor, null);
            }
          }
          
        }
        #endregion
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _chatFieldNames;
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Chat ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Chat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Chat ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Chat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Chat ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Chat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Chat ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Chat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Chat ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Chat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Chat MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Chat prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Chat, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Chat cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Chat result;
          
          private Chat PrepareBuilder() {
            if (resultIsReadOnly) {
              Chat original = result;
              result = new Chat();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Chat MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::protos.Internal.Types.Chat.Descriptor; }
          }
          
          public override Chat DefaultInstanceForType {
            get { return global::protos.Internal.Types.Chat.DefaultInstance; }
          }
          
          public override Chat BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Chat) {
              return MergeFrom((Chat) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Chat other) {
            if (other == global::protos.Internal.Types.Chat.DefaultInstance) return this;
            PrepareBuilder();
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_chatFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _chatFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
        }
        static Chat() {
          object.ReferenceEquals(global::protos.Protos.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _internalFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Internal ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Internal ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Internal ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Internal ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Internal ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Internal ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Internal ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Internal ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Internal ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Internal ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Internal MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Internal prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Internal, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Internal cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Internal result;
      
      private Internal PrepareBuilder() {
        if (resultIsReadOnly) {
          Internal original = result;
          result = new Internal();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Internal MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protos.Internal.Descriptor; }
      }
      
      public override Internal DefaultInstanceForType {
        get { return global::protos.Internal.DefaultInstance; }
      }
      
      public override Internal BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Internal) {
          return MergeFrom((Internal) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Internal other) {
        if (other == global::protos.Internal.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_internalFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _internalFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Internal() {
      object.ReferenceEquals(global::protos.Protos.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  /*
  * Service generation is now disabled by default, use the following option to enable:
  * option (google.protobuf.csharp_file_options).service_generator_type = GENERIC;
  */
  /*
  * Service generation is now disabled by default, use the following option to enable:
  * option (google.protobuf.csharp_file_options).service_generator_type = GENERIC;
  */
  /*
  * Service generation is now disabled by default, use the following option to enable:
  * option (google.protobuf.csharp_file_options).service_generator_type = GENERIC;
  */
  /*
  * Service generation is now disabled by default, use the following option to enable:
  * option (google.protobuf.csharp_file_options).service_generator_type = GENERIC;
  */
  /*
  * Service generation is now disabled by default, use the following option to enable:
  * option (google.protobuf.csharp_file_options).service_generator_type = GENERIC;
  */
  /*
  * Service generation is now disabled by default, use the following option to enable:
  * option (google.protobuf.csharp_file_options).service_generator_type = GENERIC;
  */
  #endregion
  
}

#endregion Designer generated code
